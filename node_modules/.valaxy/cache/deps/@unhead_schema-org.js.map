{
  "version": 3,
  "sources": ["../../../.pnpm/ufo@1.5.4/node_modules/ufo/dist/index.mjs", "../../../.pnpm/ohash@1.1.6/node_modules/ohash/dist/shared/ohash.BvSMZzli.mjs", "../../../.pnpm/ohash@1.1.6/node_modules/ohash/dist/index.mjs", "../../../.pnpm/@unhead+schema-org@1.11.20__72b62d407d2e65cd755594368be89fd0/node_modules/@unhead/schema-org/dist/shared/schema-org.CwD-TP0q.mjs", "../../../.pnpm/@unhead+schema-org@1.11.20__72b62d407d2e65cd755594368be89fd0/node_modules/@unhead/schema-org/dist/index.mjs"],
  "sourcesContent": ["const n = /[^\\0-\\x7E]/;\nconst t = /[\\x2E\\u3002\\uFF0E\\uFF61]/g;\nconst o = {\n  overflow: \"Overflow Error\",\n  \"not-basic\": \"Illegal Input\",\n  \"invalid-input\": \"Invalid Input\"\n};\nconst e = Math.floor;\nconst r = String.fromCharCode;\nfunction s(n2) {\n  throw new RangeError(o[n2]);\n}\nconst c = function(n2, t2) {\n  return n2 + 22 + 75 * (n2 < 26) - ((t2 != 0) << 5);\n};\nconst u = function(n2, t2, o2) {\n  let r2 = 0;\n  for (n2 = o2 ? e(n2 / 700) : n2 >> 1, n2 += e(n2 / t2); n2 > 455; r2 += 36) {\n    n2 = e(n2 / 35);\n  }\n  return e(r2 + 36 * n2 / (n2 + 38));\n};\nfunction toASCII(o2) {\n  return function(n2, o3) {\n    const e2 = n2.split(\"@\");\n    let r2 = \"\";\n    e2.length > 1 && (r2 = e2[0] + \"@\", n2 = e2[1]);\n    const s2 = function(n3, t2) {\n      const o4 = [];\n      let e3 = n3.length;\n      for (; e3--; ) {\n        o4[e3] = t2(n3[e3]);\n      }\n      return o4;\n    }((n2 = n2.replace(t, \".\")).split(\".\"), o3).join(\".\");\n    return r2 + s2;\n  }(o2, function(t2) {\n    return n.test(t2) ? \"xn--\" + function(n2) {\n      const t3 = [];\n      const o3 = (n2 = function(n3) {\n        const t4 = [];\n        let o4 = 0;\n        const e2 = n3.length;\n        for (; o4 < e2; ) {\n          const r2 = n3.charCodeAt(o4++);\n          if (r2 >= 55296 && r2 <= 56319 && o4 < e2) {\n            const e3 = n3.charCodeAt(o4++);\n            (64512 & e3) == 56320 ? t4.push(((1023 & r2) << 10) + (1023 & e3) + 65536) : (t4.push(r2), o4--);\n          } else {\n            t4.push(r2);\n          }\n        }\n        return t4;\n      }(n2)).length;\n      let f = 128;\n      let i = 0;\n      let l = 72;\n      for (const o4 of n2) {\n        o4 < 128 && t3.push(r(o4));\n      }\n      const h = t3.length;\n      let p = h;\n      for (h && t3.push(\"-\"); p < o3; ) {\n        let o4 = 2147483647;\n        for (const t4 of n2) {\n          t4 >= f && t4 < o4 && (o4 = t4);\n        }\n        const a = p + 1;\n        o4 - f > e((2147483647 - i) / a) && s(\"overflow\"), i += (o4 - f) * a, f = o4;\n        for (const o5 of n2) {\n          if (o5 < f && ++i > 2147483647 && s(\"overflow\"), o5 == f) {\n            let n3 = i;\n            for (let o6 = 36; ; o6 += 36) {\n              const s2 = o6 <= l ? 1 : o6 >= l + 26 ? 26 : o6 - l;\n              if (n3 < s2) {\n                break;\n              }\n              const u2 = n3 - s2;\n              const f2 = 36 - s2;\n              t3.push(r(c(s2 + u2 % f2, 0))), n3 = e(u2 / f2);\n            }\n            t3.push(r(c(n3, 0))), l = u(i, a, p == h), i = 0, ++p;\n          }\n        }\n        ++i, ++f;\n      }\n      return t3.join(\"\");\n    }(t2) : t2;\n  });\n}\n\nconst HASH_RE = /#/g;\nconst AMPERSAND_RE = /&/g;\nconst SLASH_RE = /\\//g;\nconst EQUAL_RE = /=/g;\nconst IM_RE = /\\?/g;\nconst PLUS_RE = /\\+/g;\nconst ENC_CARET_RE = /%5e/gi;\nconst ENC_BACKTICK_RE = /%60/gi;\nconst ENC_CURLY_OPEN_RE = /%7b/gi;\nconst ENC_PIPE_RE = /%7c/gi;\nconst ENC_CURLY_CLOSE_RE = /%7d/gi;\nconst ENC_SPACE_RE = /%20/gi;\nconst ENC_SLASH_RE = /%2f/gi;\nconst ENC_ENC_SLASH_RE = /%252f/gi;\nfunction encode(text) {\n  return encodeURI(\"\" + text).replace(ENC_PIPE_RE, \"|\");\n}\nfunction encodeHash(text) {\n  return encode(text).replace(ENC_CURLY_OPEN_RE, \"{\").replace(ENC_CURLY_CLOSE_RE, \"}\").replace(ENC_CARET_RE, \"^\");\n}\nfunction encodeQueryValue(input) {\n  return encode(typeof input === \"string\" ? input : JSON.stringify(input)).replace(PLUS_RE, \"%2B\").replace(ENC_SPACE_RE, \"+\").replace(HASH_RE, \"%23\").replace(AMPERSAND_RE, \"%26\").replace(ENC_BACKTICK_RE, \"`\").replace(ENC_CARET_RE, \"^\").replace(SLASH_RE, \"%2F\");\n}\nfunction encodeQueryKey(text) {\n  return encodeQueryValue(text).replace(EQUAL_RE, \"%3D\");\n}\nfunction encodePath(text) {\n  return encode(text).replace(HASH_RE, \"%23\").replace(IM_RE, \"%3F\").replace(ENC_ENC_SLASH_RE, \"%2F\").replace(AMPERSAND_RE, \"%26\").replace(PLUS_RE, \"%2B\");\n}\nfunction encodeParam(text) {\n  return encodePath(text).replace(SLASH_RE, \"%2F\");\n}\nfunction decode(text = \"\") {\n  try {\n    return decodeURIComponent(\"\" + text);\n  } catch {\n    return \"\" + text;\n  }\n}\nfunction decodePath(text) {\n  return decode(text.replace(ENC_SLASH_RE, \"%252F\"));\n}\nfunction decodeQueryKey(text) {\n  return decode(text.replace(PLUS_RE, \" \"));\n}\nfunction decodeQueryValue(text) {\n  return decode(text.replace(PLUS_RE, \" \"));\n}\nfunction encodeHost(name = \"\") {\n  return toASCII(name);\n}\n\nfunction parseQuery(parametersString = \"\") {\n  const object = {};\n  if (parametersString[0] === \"?\") {\n    parametersString = parametersString.slice(1);\n  }\n  for (const parameter of parametersString.split(\"&\")) {\n    const s = parameter.match(/([^=]+)=?(.*)/) || [];\n    if (s.length < 2) {\n      continue;\n    }\n    const key = decodeQueryKey(s[1]);\n    if (key === \"__proto__\" || key === \"constructor\") {\n      continue;\n    }\n    const value = decodeQueryValue(s[2] || \"\");\n    if (object[key] === void 0) {\n      object[key] = value;\n    } else if (Array.isArray(object[key])) {\n      object[key].push(value);\n    } else {\n      object[key] = [object[key], value];\n    }\n  }\n  return object;\n}\nfunction encodeQueryItem(key, value) {\n  if (typeof value === \"number\" || typeof value === \"boolean\") {\n    value = String(value);\n  }\n  if (!value) {\n    return encodeQueryKey(key);\n  }\n  if (Array.isArray(value)) {\n    return value.map((_value) => `${encodeQueryKey(key)}=${encodeQueryValue(_value)}`).join(\"&\");\n  }\n  return `${encodeQueryKey(key)}=${encodeQueryValue(value)}`;\n}\nfunction stringifyQuery(query) {\n  return Object.keys(query).filter((k) => query[k] !== void 0).map((k) => encodeQueryItem(k, query[k])).filter(Boolean).join(\"&\");\n}\n\nconst PROTOCOL_STRICT_REGEX = /^[\\s\\w\\0+.-]{2,}:([/\\\\]{1,2})/;\nconst PROTOCOL_REGEX = /^[\\s\\w\\0+.-]{2,}:([/\\\\]{2})?/;\nconst PROTOCOL_RELATIVE_REGEX = /^([/\\\\]\\s*){2,}[^/\\\\]/;\nconst PROTOCOL_SCRIPT_RE = /^[\\s\\0]*(blob|data|javascript|vbscript):$/i;\nconst TRAILING_SLASH_RE = /\\/$|\\/\\?|\\/#/;\nconst JOIN_LEADING_SLASH_RE = /^\\.?\\//;\nfunction isRelative(inputString) {\n  return [\"./\", \"../\"].some((string_) => inputString.startsWith(string_));\n}\nfunction hasProtocol(inputString, opts = {}) {\n  if (typeof opts === \"boolean\") {\n    opts = { acceptRelative: opts };\n  }\n  if (opts.strict) {\n    return PROTOCOL_STRICT_REGEX.test(inputString);\n  }\n  return PROTOCOL_REGEX.test(inputString) || (opts.acceptRelative ? PROTOCOL_RELATIVE_REGEX.test(inputString) : false);\n}\nfunction isScriptProtocol(protocol) {\n  return !!protocol && PROTOCOL_SCRIPT_RE.test(protocol);\n}\nfunction hasTrailingSlash(input = \"\", respectQueryAndFragment) {\n  if (!respectQueryAndFragment) {\n    return input.endsWith(\"/\");\n  }\n  return TRAILING_SLASH_RE.test(input);\n}\nfunction withoutTrailingSlash(input = \"\", respectQueryAndFragment) {\n  if (!respectQueryAndFragment) {\n    return (hasTrailingSlash(input) ? input.slice(0, -1) : input) || \"/\";\n  }\n  if (!hasTrailingSlash(input, true)) {\n    return input || \"/\";\n  }\n  let path = input;\n  let fragment = \"\";\n  const fragmentIndex = input.indexOf(\"#\");\n  if (fragmentIndex >= 0) {\n    path = input.slice(0, fragmentIndex);\n    fragment = input.slice(fragmentIndex);\n  }\n  const [s0, ...s] = path.split(\"?\");\n  const cleanPath = s0.endsWith(\"/\") ? s0.slice(0, -1) : s0;\n  return (cleanPath || \"/\") + (s.length > 0 ? `?${s.join(\"?\")}` : \"\") + fragment;\n}\nfunction withTrailingSlash(input = \"\", respectQueryAndFragment) {\n  if (!respectQueryAndFragment) {\n    return input.endsWith(\"/\") ? input : input + \"/\";\n  }\n  if (hasTrailingSlash(input, true)) {\n    return input || \"/\";\n  }\n  let path = input;\n  let fragment = \"\";\n  const fragmentIndex = input.indexOf(\"#\");\n  if (fragmentIndex >= 0) {\n    path = input.slice(0, fragmentIndex);\n    fragment = input.slice(fragmentIndex);\n    if (!path) {\n      return fragment;\n    }\n  }\n  const [s0, ...s] = path.split(\"?\");\n  return s0 + \"/\" + (s.length > 0 ? `?${s.join(\"?\")}` : \"\") + fragment;\n}\nfunction hasLeadingSlash(input = \"\") {\n  return input.startsWith(\"/\");\n}\nfunction withoutLeadingSlash(input = \"\") {\n  return (hasLeadingSlash(input) ? input.slice(1) : input) || \"/\";\n}\nfunction withLeadingSlash(input = \"\") {\n  return hasLeadingSlash(input) ? input : \"/\" + input;\n}\nfunction cleanDoubleSlashes(input = \"\") {\n  return input.split(\"://\").map((string_) => string_.replace(/\\/{2,}/g, \"/\")).join(\"://\");\n}\nfunction withBase(input, base) {\n  if (isEmptyURL(base) || hasProtocol(input)) {\n    return input;\n  }\n  const _base = withoutTrailingSlash(base);\n  if (input.startsWith(_base)) {\n    return input;\n  }\n  return joinURL(_base, input);\n}\nfunction withoutBase(input, base) {\n  if (isEmptyURL(base)) {\n    return input;\n  }\n  const _base = withoutTrailingSlash(base);\n  if (!input.startsWith(_base)) {\n    return input;\n  }\n  const trimmed = input.slice(_base.length);\n  return trimmed[0] === \"/\" ? trimmed : \"/\" + trimmed;\n}\nfunction withQuery(input, query) {\n  const parsed = parseURL(input);\n  const mergedQuery = { ...parseQuery(parsed.search), ...query };\n  parsed.search = stringifyQuery(mergedQuery);\n  return stringifyParsedURL(parsed);\n}\nfunction getQuery(input) {\n  return parseQuery(parseURL(input).search);\n}\nfunction isEmptyURL(url) {\n  return !url || url === \"/\";\n}\nfunction isNonEmptyURL(url) {\n  return url && url !== \"/\";\n}\nfunction joinURL(base, ...input) {\n  let url = base || \"\";\n  for (const segment of input.filter((url2) => isNonEmptyURL(url2))) {\n    if (url) {\n      const _segment = segment.replace(JOIN_LEADING_SLASH_RE, \"\");\n      url = withTrailingSlash(url) + _segment;\n    } else {\n      url = segment;\n    }\n  }\n  return url;\n}\nfunction joinRelativeURL(..._input) {\n  const JOIN_SEGMENT_SPLIT_RE = /\\/(?!\\/)/;\n  const input = _input.filter(Boolean);\n  const segments = [];\n  let segmentsDepth = 0;\n  for (const i of input) {\n    if (!i || i === \"/\") {\n      continue;\n    }\n    for (const [sindex, s] of i.split(JOIN_SEGMENT_SPLIT_RE).entries()) {\n      if (!s || s === \".\") {\n        continue;\n      }\n      if (s === \"..\") {\n        if (segments.length === 1 && hasProtocol(segments[0])) {\n          continue;\n        }\n        segments.pop();\n        segmentsDepth--;\n        continue;\n      }\n      if (sindex === 1 && segments[segments.length - 1]?.endsWith(\":/\")) {\n        segments[segments.length - 1] += \"/\" + s;\n        continue;\n      }\n      segments.push(s);\n      segmentsDepth++;\n    }\n  }\n  let url = segments.join(\"/\");\n  if (segmentsDepth >= 0) {\n    if (input[0]?.startsWith(\"/\") && !url.startsWith(\"/\")) {\n      url = \"/\" + url;\n    } else if (input[0]?.startsWith(\"./\") && !url.startsWith(\"./\")) {\n      url = \"./\" + url;\n    }\n  } else {\n    url = \"../\".repeat(-1 * segmentsDepth) + url;\n  }\n  if (input[input.length - 1]?.endsWith(\"/\") && !url.endsWith(\"/\")) {\n    url += \"/\";\n  }\n  return url;\n}\nfunction withHttp(input) {\n  return withProtocol(input, \"http://\");\n}\nfunction withHttps(input) {\n  return withProtocol(input, \"https://\");\n}\nfunction withoutProtocol(input) {\n  return withProtocol(input, \"\");\n}\nfunction withProtocol(input, protocol) {\n  let match = input.match(PROTOCOL_REGEX);\n  if (!match) {\n    match = input.match(/^\\/{2,}/);\n  }\n  if (!match) {\n    return protocol + input;\n  }\n  return protocol + input.slice(match[0].length);\n}\nfunction normalizeURL(input) {\n  const parsed = parseURL(input);\n  parsed.pathname = encodePath(decodePath(parsed.pathname));\n  parsed.hash = encodeHash(decode(parsed.hash));\n  parsed.host = encodeHost(decode(parsed.host));\n  parsed.search = stringifyQuery(parseQuery(parsed.search));\n  return stringifyParsedURL(parsed);\n}\nfunction resolveURL(base = \"\", ...inputs) {\n  if (typeof base !== \"string\") {\n    throw new TypeError(\n      `URL input should be string received ${typeof base} (${base})`\n    );\n  }\n  const filteredInputs = inputs.filter((input) => isNonEmptyURL(input));\n  if (filteredInputs.length === 0) {\n    return base;\n  }\n  const url = parseURL(base);\n  for (const inputSegment of filteredInputs) {\n    const urlSegment = parseURL(inputSegment);\n    if (urlSegment.pathname) {\n      url.pathname = withTrailingSlash(url.pathname) + withoutLeadingSlash(urlSegment.pathname);\n    }\n    if (urlSegment.hash && urlSegment.hash !== \"#\") {\n      url.hash = urlSegment.hash;\n    }\n    if (urlSegment.search && urlSegment.search !== \"?\") {\n      if (url.search && url.search !== \"?\") {\n        const queryString = stringifyQuery({\n          ...parseQuery(url.search),\n          ...parseQuery(urlSegment.search)\n        });\n        url.search = queryString.length > 0 ? \"?\" + queryString : \"\";\n      } else {\n        url.search = urlSegment.search;\n      }\n    }\n  }\n  return stringifyParsedURL(url);\n}\nfunction isSamePath(p1, p2) {\n  return decode(withoutTrailingSlash(p1)) === decode(withoutTrailingSlash(p2));\n}\nfunction isEqual(a, b, options = {}) {\n  if (!options.trailingSlash) {\n    a = withTrailingSlash(a);\n    b = withTrailingSlash(b);\n  }\n  if (!options.leadingSlash) {\n    a = withLeadingSlash(a);\n    b = withLeadingSlash(b);\n  }\n  if (!options.encoding) {\n    a = decode(a);\n    b = decode(b);\n  }\n  return a === b;\n}\nfunction withFragment(input, hash) {\n  if (!hash || hash === \"#\") {\n    return input;\n  }\n  const parsed = parseURL(input);\n  parsed.hash = hash === \"\" ? \"\" : \"#\" + encodeHash(hash);\n  return stringifyParsedURL(parsed);\n}\nfunction withoutFragment(input) {\n  return stringifyParsedURL({ ...parseURL(input), hash: \"\" });\n}\nfunction withoutHost(input) {\n  const parsed = parseURL(input);\n  return (parsed.pathname || \"/\") + parsed.search + parsed.hash;\n}\n\nconst protocolRelative = Symbol.for(\"ufo:protocolRelative\");\nfunction parseURL(input = \"\", defaultProto) {\n  const _specialProtoMatch = input.match(\n    /^[\\s\\0]*(blob:|data:|javascript:|vbscript:)(.*)/i\n  );\n  if (_specialProtoMatch) {\n    const [, _proto, _pathname = \"\"] = _specialProtoMatch;\n    return {\n      protocol: _proto.toLowerCase(),\n      pathname: _pathname,\n      href: _proto + _pathname,\n      auth: \"\",\n      host: \"\",\n      search: \"\",\n      hash: \"\"\n    };\n  }\n  if (!hasProtocol(input, { acceptRelative: true })) {\n    return defaultProto ? parseURL(defaultProto + input) : parsePath(input);\n  }\n  const [, protocol = \"\", auth, hostAndPath = \"\"] = input.replace(/\\\\/g, \"/\").match(/^[\\s\\0]*([\\w+.-]{2,}:)?\\/\\/([^/@]+@)?(.*)/) || [];\n  let [, host = \"\", path = \"\"] = hostAndPath.match(/([^#/?]*)(.*)?/) || [];\n  if (protocol === \"file:\") {\n    path = path.replace(/\\/(?=[A-Za-z]:)/, \"\");\n  }\n  const { pathname, search, hash } = parsePath(path);\n  return {\n    protocol: protocol.toLowerCase(),\n    auth: auth ? auth.slice(0, Math.max(0, auth.length - 1)) : \"\",\n    host,\n    pathname,\n    search,\n    hash,\n    [protocolRelative]: !protocol\n  };\n}\nfunction parsePath(input = \"\") {\n  const [pathname = \"\", search = \"\", hash = \"\"] = (input.match(/([^#?]*)(\\?[^#]*)?(#.*)?/) || []).splice(1);\n  return {\n    pathname,\n    search,\n    hash\n  };\n}\nfunction parseAuth(input = \"\") {\n  const [username, password] = input.split(\":\");\n  return {\n    username: decode(username),\n    password: decode(password)\n  };\n}\nfunction parseHost(input = \"\") {\n  const [hostname, port] = (input.match(/([^/:]*):?(\\d+)?/) || []).splice(1);\n  return {\n    hostname: decode(hostname),\n    port\n  };\n}\nfunction stringifyParsedURL(parsed) {\n  const pathname = parsed.pathname || \"\";\n  const search = parsed.search ? (parsed.search.startsWith(\"?\") ? \"\" : \"?\") + parsed.search : \"\";\n  const hash = parsed.hash || \"\";\n  const auth = parsed.auth ? parsed.auth + \"@\" : \"\";\n  const host = parsed.host || \"\";\n  const proto = parsed.protocol || parsed[protocolRelative] ? (parsed.protocol || \"\") + \"//\" : \"\";\n  return proto + auth + host + pathname + search + hash;\n}\nconst FILENAME_STRICT_REGEX = /\\/([^/]+\\.[^/]+)$/;\nconst FILENAME_REGEX = /\\/([^/]+)$/;\nfunction parseFilename(input = \"\", { strict }) {\n  const { pathname } = parseURL(input);\n  const matches = strict ? pathname.match(FILENAME_STRICT_REGEX) : pathname.match(FILENAME_REGEX);\n  return matches ? matches[1] : void 0;\n}\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nclass $URL {\n  constructor(input = \"\") {\n    __publicField(this, \"protocol\");\n    __publicField(this, \"host\");\n    __publicField(this, \"auth\");\n    __publicField(this, \"pathname\");\n    __publicField(this, \"query\", {});\n    __publicField(this, \"hash\");\n    if (typeof input !== \"string\") {\n      throw new TypeError(\n        `URL input should be string received ${typeof input} (${input})`\n      );\n    }\n    const parsed = parseURL(input);\n    this.protocol = decode(parsed.protocol);\n    this.host = decode(parsed.host);\n    this.auth = decode(parsed.auth);\n    this.pathname = decodePath(parsed.pathname);\n    this.query = parseQuery(parsed.search);\n    this.hash = decode(parsed.hash);\n  }\n  get hostname() {\n    return parseHost(this.host).hostname;\n  }\n  get port() {\n    return parseHost(this.host).port || \"\";\n  }\n  get username() {\n    return parseAuth(this.auth).username;\n  }\n  get password() {\n    return parseAuth(this.auth).password || \"\";\n  }\n  get hasProtocol() {\n    return this.protocol.length;\n  }\n  get isAbsolute() {\n    return this.hasProtocol || this.pathname[0] === \"/\";\n  }\n  get search() {\n    const q = stringifyQuery(this.query);\n    return q.length > 0 ? \"?\" + q : \"\";\n  }\n  get searchParams() {\n    const p = new URLSearchParams();\n    for (const name in this.query) {\n      const value = this.query[name];\n      if (Array.isArray(value)) {\n        for (const v of value) {\n          p.append(name, v);\n        }\n      } else {\n        p.append(\n          name,\n          typeof value === \"string\" ? value : JSON.stringify(value)\n        );\n      }\n    }\n    return p;\n  }\n  get origin() {\n    return (this.protocol ? this.protocol + \"//\" : \"\") + encodeHost(this.host);\n  }\n  get fullpath() {\n    return encodePath(this.pathname) + this.search + encodeHash(this.hash);\n  }\n  get encodedAuth() {\n    if (!this.auth) {\n      return \"\";\n    }\n    const { username, password } = parseAuth(this.auth);\n    return encodeURIComponent(username) + (password ? \":\" + encodeURIComponent(password) : \"\");\n  }\n  get href() {\n    const auth = this.encodedAuth;\n    const originWithAuth = (this.protocol ? this.protocol + \"//\" : \"\") + (auth ? auth + \"@\" : \"\") + encodeHost(this.host);\n    return this.hasProtocol && this.isAbsolute ? originWithAuth + this.fullpath : this.fullpath;\n  }\n  append(url) {\n    if (url.hasProtocol) {\n      throw new Error(\"Cannot append a URL with protocol\");\n    }\n    Object.assign(this.query, url.query);\n    if (url.pathname) {\n      this.pathname = withTrailingSlash(this.pathname) + withoutLeadingSlash(url.pathname);\n    }\n    if (url.hash) {\n      this.hash = url.hash;\n    }\n  }\n  toJSON() {\n    return this.href;\n  }\n  toString() {\n    return this.href;\n  }\n}\nfunction createURL(input) {\n  return new $URL(input);\n}\n\nexport { $URL, cleanDoubleSlashes, createURL, decode, decodePath, decodeQueryKey, decodeQueryValue, encode, encodeHash, encodeHost, encodeParam, encodePath, encodeQueryItem, encodeQueryKey, encodeQueryValue, getQuery, hasLeadingSlash, hasProtocol, hasTrailingSlash, isEmptyURL, isEqual, isNonEmptyURL, isRelative, isSamePath, isScriptProtocol, joinRelativeURL, joinURL, normalizeURL, parseAuth, parseFilename, parseHost, parsePath, parseQuery, parseURL, resolveURL, stringifyParsedURL, stringifyQuery, withBase, withFragment, withHttp, withHttps, withLeadingSlash, withProtocol, withQuery, withTrailingSlash, withoutBase, withoutFragment, withoutHost, withoutLeadingSlash, withoutProtocol, withoutTrailingSlash };\n", "const defaults = Object.freeze({\n  ignoreUnknown: false,\n  respectType: false,\n  respectFunctionNames: false,\n  respectFunctionProperties: false,\n  unorderedObjects: true,\n  unorderedArrays: false,\n  unorderedSets: false,\n  excludeKeys: void 0,\n  excludeValues: void 0,\n  replacer: void 0\n});\nfunction objectHash(object, options) {\n  if (options) {\n    options = { ...defaults, ...options };\n  } else {\n    options = defaults;\n  }\n  const hasher = createHasher(options);\n  hasher.dispatch(object);\n  return hasher.toString();\n}\nconst defaultPrototypesKeys = Object.freeze([\n  \"prototype\",\n  \"__proto__\",\n  \"constructor\"\n]);\nfunction createHasher(options) {\n  let buff = \"\";\n  let context = /* @__PURE__ */ new Map();\n  const write = (str) => {\n    buff += str;\n  };\n  return {\n    toString() {\n      return buff;\n    },\n    getContext() {\n      return context;\n    },\n    dispatch(value) {\n      if (options.replacer) {\n        value = options.replacer(value);\n      }\n      const type = value === null ? \"null\" : typeof value;\n      return this[type](value);\n    },\n    object(object) {\n      if (object && typeof object.toJSON === \"function\") {\n        return this.object(object.toJSON());\n      }\n      const objString = Object.prototype.toString.call(object);\n      let objType = \"\";\n      const objectLength = objString.length;\n      if (objectLength < 10) {\n        objType = \"unknown:[\" + objString + \"]\";\n      } else {\n        objType = objString.slice(8, objectLength - 1);\n      }\n      objType = objType.toLowerCase();\n      let objectNumber = null;\n      if ((objectNumber = context.get(object)) === void 0) {\n        context.set(object, context.size);\n      } else {\n        return this.dispatch(\"[CIRCULAR:\" + objectNumber + \"]\");\n      }\n      if (typeof Buffer !== \"undefined\" && Buffer.isBuffer && Buffer.isBuffer(object)) {\n        write(\"buffer:\");\n        return write(object.toString(\"utf8\"));\n      }\n      if (objType !== \"object\" && objType !== \"function\" && objType !== \"asyncfunction\") {\n        if (this[objType]) {\n          this[objType](object);\n        } else if (!options.ignoreUnknown) {\n          this.unkown(object, objType);\n        }\n      } else {\n        let keys = Object.keys(object);\n        if (options.unorderedObjects) {\n          keys = keys.sort();\n        }\n        let extraKeys = [];\n        if (options.respectType !== false && !isNativeFunction(object)) {\n          extraKeys = defaultPrototypesKeys;\n        }\n        if (options.excludeKeys) {\n          keys = keys.filter((key) => {\n            return !options.excludeKeys(key);\n          });\n          extraKeys = extraKeys.filter((key) => {\n            return !options.excludeKeys(key);\n          });\n        }\n        write(\"object:\" + (keys.length + extraKeys.length) + \":\");\n        const dispatchForKey = (key) => {\n          this.dispatch(key);\n          write(\":\");\n          if (!options.excludeValues) {\n            this.dispatch(object[key]);\n          }\n          write(\",\");\n        };\n        for (const key of keys) {\n          dispatchForKey(key);\n        }\n        for (const key of extraKeys) {\n          dispatchForKey(key);\n        }\n      }\n    },\n    array(arr, unordered) {\n      unordered = unordered === void 0 ? options.unorderedArrays !== false : unordered;\n      write(\"array:\" + arr.length + \":\");\n      if (!unordered || arr.length <= 1) {\n        for (const entry of arr) {\n          this.dispatch(entry);\n        }\n        return;\n      }\n      const contextAdditions = /* @__PURE__ */ new Map();\n      const entries = arr.map((entry) => {\n        const hasher = createHasher(options);\n        hasher.dispatch(entry);\n        for (const [key, value] of hasher.getContext()) {\n          contextAdditions.set(key, value);\n        }\n        return hasher.toString();\n      });\n      context = contextAdditions;\n      entries.sort();\n      return this.array(entries, false);\n    },\n    date(date) {\n      return write(\"date:\" + date.toJSON());\n    },\n    symbol(sym) {\n      return write(\"symbol:\" + sym.toString());\n    },\n    unkown(value, type) {\n      write(type);\n      if (!value) {\n        return;\n      }\n      write(\":\");\n      if (value && typeof value.entries === \"function\") {\n        return this.array(\n          Array.from(value.entries()),\n          true\n          /* ordered */\n        );\n      }\n    },\n    error(err) {\n      return write(\"error:\" + err.toString());\n    },\n    boolean(bool) {\n      return write(\"bool:\" + bool);\n    },\n    string(string) {\n      write(\"string:\" + string.length + \":\");\n      write(string);\n    },\n    function(fn) {\n      write(\"fn:\");\n      if (isNativeFunction(fn)) {\n        this.dispatch(\"[native]\");\n      } else {\n        this.dispatch(fn.toString());\n      }\n      if (options.respectFunctionNames !== false) {\n        this.dispatch(\"function-name:\" + String(fn.name));\n      }\n      if (options.respectFunctionProperties) {\n        this.object(fn);\n      }\n    },\n    number(number) {\n      return write(\"number:\" + number);\n    },\n    xml(xml) {\n      return write(\"xml:\" + xml.toString());\n    },\n    null() {\n      return write(\"Null\");\n    },\n    undefined() {\n      return write(\"Undefined\");\n    },\n    regexp(regex) {\n      return write(\"regex:\" + regex.toString());\n    },\n    uint8array(arr) {\n      write(\"uint8array:\");\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    uint8clampedarray(arr) {\n      write(\"uint8clampedarray:\");\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    int8array(arr) {\n      write(\"int8array:\");\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    uint16array(arr) {\n      write(\"uint16array:\");\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    int16array(arr) {\n      write(\"int16array:\");\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    uint32array(arr) {\n      write(\"uint32array:\");\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    int32array(arr) {\n      write(\"int32array:\");\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    float32array(arr) {\n      write(\"float32array:\");\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    float64array(arr) {\n      write(\"float64array:\");\n      return this.dispatch(Array.prototype.slice.call(arr));\n    },\n    arraybuffer(arr) {\n      write(\"arraybuffer:\");\n      return this.dispatch(new Uint8Array(arr));\n    },\n    url(url) {\n      return write(\"url:\" + url.toString());\n    },\n    map(map) {\n      write(\"map:\");\n      const arr = [...map];\n      return this.array(arr, options.unorderedSets !== false);\n    },\n    set(set) {\n      write(\"set:\");\n      const arr = [...set];\n      return this.array(arr, options.unorderedSets !== false);\n    },\n    file(file) {\n      write(\"file:\");\n      return this.dispatch([file.name, file.size, file.type, file.lastModfied]);\n    },\n    blob() {\n      if (options.ignoreUnknown) {\n        return write(\"[blob]\");\n      }\n      throw new Error(\n        'Hashing Blob objects is currently not supported\\nUse \"options.replacer\" or \"options.ignoreUnknown\"\\n'\n      );\n    },\n    domwindow() {\n      return write(\"domwindow\");\n    },\n    bigint(number) {\n      return write(\"bigint:\" + number.toString());\n    },\n    /* Node.js standard native objects */\n    process() {\n      return write(\"process\");\n    },\n    timer() {\n      return write(\"timer\");\n    },\n    pipe() {\n      return write(\"pipe\");\n    },\n    tcp() {\n      return write(\"tcp\");\n    },\n    udp() {\n      return write(\"udp\");\n    },\n    tty() {\n      return write(\"tty\");\n    },\n    statwatcher() {\n      return write(\"statwatcher\");\n    },\n    securecontext() {\n      return write(\"securecontext\");\n    },\n    connection() {\n      return write(\"connection\");\n    },\n    zlib() {\n      return write(\"zlib\");\n    },\n    context() {\n      return write(\"context\");\n    },\n    nodescript() {\n      return write(\"nodescript\");\n    },\n    httpparser() {\n      return write(\"httpparser\");\n    },\n    dataview() {\n      return write(\"dataview\");\n    },\n    signal() {\n      return write(\"signal\");\n    },\n    fsevent() {\n      return write(\"fsevent\");\n    },\n    tlswrap() {\n      return write(\"tlswrap\");\n    }\n  };\n}\nconst nativeFunc = \"[native code] }\";\nconst nativeFuncLength = nativeFunc.length;\nfunction isNativeFunction(f) {\n  if (typeof f !== \"function\") {\n    return false;\n  }\n  return Function.prototype.toString.call(f).slice(-nativeFuncLength) === nativeFunc;\n}\n\nfunction diff(obj1, obj2, opts = {}) {\n  const h1 = _toHashedObject(obj1, opts);\n  const h2 = _toHashedObject(obj2, opts);\n  return _diff(h1, h2, opts);\n}\nfunction _diff(h1, h2, opts = {}) {\n  const diffs = [];\n  const allProps = /* @__PURE__ */ new Set([\n    ...Object.keys(h1.props || {}),\n    ...Object.keys(h2.props || {})\n  ]);\n  if (h1.props && h2.props) {\n    for (const prop of allProps) {\n      const p1 = h1.props[prop];\n      const p2 = h2.props[prop];\n      if (p1 && p2) {\n        diffs.push(..._diff(h1.props?.[prop], h2.props?.[prop], opts));\n      } else if (p1 || p2) {\n        diffs.push(\n          new DiffEntry((p2 || p1).key, p1 ? \"removed\" : \"added\", p2, p1)\n        );\n      }\n    }\n  }\n  if (allProps.size === 0 && h1.hash !== h2.hash) {\n    diffs.push(new DiffEntry((h2 || h1).key, \"changed\", h2, h1));\n  }\n  return diffs;\n}\nfunction _toHashedObject(obj, opts, key = \"\") {\n  if (obj && typeof obj !== \"object\") {\n    return new DiffHashedObject(key, obj, objectHash(obj, opts));\n  }\n  const props = {};\n  const hashes = [];\n  for (const _key in obj) {\n    props[_key] = _toHashedObject(\n      obj[_key],\n      opts,\n      key ? `${key}.${_key}` : _key\n    );\n    hashes.push(props[_key].hash);\n  }\n  return new DiffHashedObject(key, obj, `{${hashes.join(\":\")}}`, props);\n}\nclass DiffEntry {\n  constructor(key, type, newValue, oldValue) {\n    this.key = key;\n    this.type = type;\n    this.newValue = newValue;\n    this.oldValue = oldValue;\n  }\n  toString() {\n    return this.toJSON();\n  }\n  toJSON() {\n    switch (this.type) {\n      case \"added\": {\n        return `Added   \\`${this.key}\\``;\n      }\n      case \"removed\": {\n        return `Removed \\`${this.key}\\``;\n      }\n      case \"changed\": {\n        return `Changed \\`${this.key}\\` from \\`${this.oldValue?.toString() || \"-\"}\\` to \\`${this.newValue.toString()}\\``;\n      }\n    }\n  }\n}\nclass DiffHashedObject {\n  constructor(key, value, hash, props) {\n    this.key = key;\n    this.value = value;\n    this.hash = hash;\n    this.props = props;\n  }\n  toString() {\n    if (this.props) {\n      return `{${Object.keys(this.props).join(\",\")}}`;\n    } else {\n      return JSON.stringify(this.value);\n    }\n  }\n  toJSON() {\n    const k = this.key || \".\";\n    if (this.props) {\n      return `${k}({${Object.keys(this.props).join(\",\")}})`;\n    }\n    return `${k}(${this.value})`;\n  }\n}\n\nfunction isEqual(object1, object2, hashOptions = {}) {\n  if (object1 === object2) {\n    return true;\n  }\n  if (objectHash(object1, hashOptions) === objectHash(object2, hashOptions)) {\n    return true;\n  }\n  return false;\n}\n\nexport { diff as d, isEqual as i, objectHash as o };\n", "import { o as objectHash } from './shared/ohash.BvSMZzli.mjs';\nexport { d as diff, i as isEqual } from './shared/ohash.BvSMZzli.mjs';\n\nclass WordArray {\n  words;\n  sigBytes;\n  constructor(words, sigBytes) {\n    words = this.words = words || [];\n    this.sigBytes = sigBytes === void 0 ? words.length * 4 : sigBytes;\n  }\n  toString(encoder) {\n    return (encoder || Hex).stringify(this);\n  }\n  concat(wordArray) {\n    this.clamp();\n    if (this.sigBytes % 4) {\n      for (let i = 0; i < wordArray.sigBytes; i++) {\n        const thatByte = wordArray.words[i >>> 2] >>> 24 - i % 4 * 8 & 255;\n        this.words[this.sigBytes + i >>> 2] |= thatByte << 24 - (this.sigBytes + i) % 4 * 8;\n      }\n    } else {\n      for (let j = 0; j < wordArray.sigBytes; j += 4) {\n        this.words[this.sigBytes + j >>> 2] = wordArray.words[j >>> 2];\n      }\n    }\n    this.sigBytes += wordArray.sigBytes;\n    return this;\n  }\n  clamp() {\n    this.words[this.sigBytes >>> 2] &= 4294967295 << 32 - this.sigBytes % 4 * 8;\n    this.words.length = Math.ceil(this.sigBytes / 4);\n  }\n  clone() {\n    return new WordArray([...this.words]);\n  }\n}\nconst Hex = {\n  stringify(wordArray) {\n    const hexChars = [];\n    for (let i = 0; i < wordArray.sigBytes; i++) {\n      const bite = wordArray.words[i >>> 2] >>> 24 - i % 4 * 8 & 255;\n      hexChars.push((bite >>> 4).toString(16), (bite & 15).toString(16));\n    }\n    return hexChars.join(\"\");\n  }\n};\nconst Base64 = {\n  stringify(wordArray) {\n    const keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    const base64Chars = [];\n    for (let i = 0; i < wordArray.sigBytes; i += 3) {\n      const byte1 = wordArray.words[i >>> 2] >>> 24 - i % 4 * 8 & 255;\n      const byte2 = wordArray.words[i + 1 >>> 2] >>> 24 - (i + 1) % 4 * 8 & 255;\n      const byte3 = wordArray.words[i + 2 >>> 2] >>> 24 - (i + 2) % 4 * 8 & 255;\n      const triplet = byte1 << 16 | byte2 << 8 | byte3;\n      for (let j = 0; j < 4 && i * 8 + j * 6 < wordArray.sigBytes * 8; j++) {\n        base64Chars.push(keyStr.charAt(triplet >>> 6 * (3 - j) & 63));\n      }\n    }\n    return base64Chars.join(\"\");\n  }\n};\nconst Latin1 = {\n  parse(latin1Str) {\n    const latin1StrLength = latin1Str.length;\n    const words = [];\n    for (let i = 0; i < latin1StrLength; i++) {\n      words[i >>> 2] |= (latin1Str.charCodeAt(i) & 255) << 24 - i % 4 * 8;\n    }\n    return new WordArray(words, latin1StrLength);\n  }\n};\nconst Utf8 = {\n  parse(utf8Str) {\n    return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n  }\n};\nclass BufferedBlockAlgorithm {\n  _data = new WordArray();\n  _nDataBytes = 0;\n  _minBufferSize = 0;\n  blockSize = 512 / 32;\n  reset() {\n    this._data = new WordArray();\n    this._nDataBytes = 0;\n  }\n  _append(data) {\n    if (typeof data === \"string\") {\n      data = Utf8.parse(data);\n    }\n    this._data.concat(data);\n    this._nDataBytes += data.sigBytes;\n  }\n  _doProcessBlock(_dataWords, _offset) {\n  }\n  _process(doFlush) {\n    let processedWords;\n    let nBlocksReady = this._data.sigBytes / (this.blockSize * 4);\n    if (doFlush) {\n      nBlocksReady = Math.ceil(nBlocksReady);\n    } else {\n      nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n    }\n    const nWordsReady = nBlocksReady * this.blockSize;\n    const nBytesReady = Math.min(nWordsReady * 4, this._data.sigBytes);\n    if (nWordsReady) {\n      for (let offset = 0; offset < nWordsReady; offset += this.blockSize) {\n        this._doProcessBlock(this._data.words, offset);\n      }\n      processedWords = this._data.words.splice(0, nWordsReady);\n      this._data.sigBytes -= nBytesReady;\n    }\n    return new WordArray(processedWords, nBytesReady);\n  }\n}\nclass Hasher extends BufferedBlockAlgorithm {\n  update(messageUpdate) {\n    this._append(messageUpdate);\n    this._process();\n    return this;\n  }\n  finalize(messageUpdate) {\n    if (messageUpdate) {\n      this._append(messageUpdate);\n    }\n  }\n}\n\nconst H = [\n  1779033703,\n  -1150833019,\n  1013904242,\n  -1521486534,\n  1359893119,\n  -1694144372,\n  528734635,\n  1541459225\n];\nconst K = [\n  1116352408,\n  1899447441,\n  -1245643825,\n  -373957723,\n  961987163,\n  1508970993,\n  -1841331548,\n  -1424204075,\n  -670586216,\n  310598401,\n  607225278,\n  1426881987,\n  1925078388,\n  -2132889090,\n  -1680079193,\n  -1046744716,\n  -459576895,\n  -272742522,\n  264347078,\n  604807628,\n  770255983,\n  1249150122,\n  1555081692,\n  1996064986,\n  -1740746414,\n  -1473132947,\n  -1341970488,\n  -1084653625,\n  -958395405,\n  -710438585,\n  113926993,\n  338241895,\n  666307205,\n  773529912,\n  1294757372,\n  1396182291,\n  1695183700,\n  1986661051,\n  -2117940946,\n  -1838011259,\n  -1564481375,\n  -1474664885,\n  -1035236496,\n  -949202525,\n  -778901479,\n  -694614492,\n  -200395387,\n  275423344,\n  430227734,\n  506948616,\n  659060556,\n  883997877,\n  958139571,\n  1322822218,\n  1537002063,\n  1747873779,\n  1955562222,\n  2024104815,\n  -2067236844,\n  -1933114872,\n  -1866530822,\n  -1538233109,\n  -1090935817,\n  -965641998\n];\nconst W = [];\nclass SHA256 extends Hasher {\n  _hash = new WordArray([...H]);\n  /**\n   * Resets the internal state of the hash object to initial values.\n   */\n  reset() {\n    super.reset();\n    this._hash = new WordArray([...H]);\n  }\n  _doProcessBlock(M, offset) {\n    const H2 = this._hash.words;\n    let a = H2[0];\n    let b = H2[1];\n    let c = H2[2];\n    let d = H2[3];\n    let e = H2[4];\n    let f = H2[5];\n    let g = H2[6];\n    let h = H2[7];\n    for (let i = 0; i < 64; i++) {\n      if (i < 16) {\n        W[i] = M[offset + i] | 0;\n      } else {\n        const gamma0x = W[i - 15];\n        const gamma0 = (gamma0x << 25 | gamma0x >>> 7) ^ (gamma0x << 14 | gamma0x >>> 18) ^ gamma0x >>> 3;\n        const gamma1x = W[i - 2];\n        const gamma1 = (gamma1x << 15 | gamma1x >>> 17) ^ (gamma1x << 13 | gamma1x >>> 19) ^ gamma1x >>> 10;\n        W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n      }\n      const ch = e & f ^ ~e & g;\n      const maj = a & b ^ a & c ^ b & c;\n      const sigma0 = (a << 30 | a >>> 2) ^ (a << 19 | a >>> 13) ^ (a << 10 | a >>> 22);\n      const sigma1 = (e << 26 | e >>> 6) ^ (e << 21 | e >>> 11) ^ (e << 7 | e >>> 25);\n      const t1 = h + sigma1 + ch + K[i] + W[i];\n      const t2 = sigma0 + maj;\n      h = g;\n      g = f;\n      f = e;\n      e = d + t1 | 0;\n      d = c;\n      c = b;\n      b = a;\n      a = t1 + t2 | 0;\n    }\n    H2[0] = H2[0] + a | 0;\n    H2[1] = H2[1] + b | 0;\n    H2[2] = H2[2] + c | 0;\n    H2[3] = H2[3] + d | 0;\n    H2[4] = H2[4] + e | 0;\n    H2[5] = H2[5] + f | 0;\n    H2[6] = H2[6] + g | 0;\n    H2[7] = H2[7] + h | 0;\n  }\n  /**\n   * Finishes the hash calculation and returns the hash as a WordArray.\n   *\n   * @param {string} messageUpdate - Additional message content to include in the hash.\n   * @returns {WordArray} The finalised hash as a WordArray.\n   */\n  finalize(messageUpdate) {\n    super.finalize(messageUpdate);\n    const nBitsTotal = this._nDataBytes * 8;\n    const nBitsLeft = this._data.sigBytes * 8;\n    this._data.words[nBitsLeft >>> 5] |= 128 << 24 - nBitsLeft % 32;\n    this._data.words[(nBitsLeft + 64 >>> 9 << 4) + 14] = Math.floor(\n      nBitsTotal / 4294967296\n    );\n    this._data.words[(nBitsLeft + 64 >>> 9 << 4) + 15] = nBitsTotal;\n    this._data.sigBytes = this._data.words.length * 4;\n    this._process();\n    return this._hash;\n  }\n}\nfunction sha256(message) {\n  return new SHA256().finalize(message).toString();\n}\nfunction sha256base64(message) {\n  return new SHA256().finalize(message).toString(Base64);\n}\n\nfunction hash(object, options = {}) {\n  const hashed = typeof object === \"string\" ? object : objectHash(object, options);\n  return sha256base64(hashed).slice(0, 10);\n}\n\nfunction murmurHash(key, seed = 0) {\n  if (typeof key === \"string\") {\n    key = createBuffer(key);\n  }\n  let i = 0;\n  let h1 = seed;\n  let k1;\n  let h1b;\n  const remainder = key.length & 3;\n  const bytes = key.length - remainder;\n  const c1 = 3432918353;\n  const c2 = 461845907;\n  while (i < bytes) {\n    k1 = key[i] & 255 | (key[++i] & 255) << 8 | (key[++i] & 255) << 16 | (key[++i] & 255) << 24;\n    ++i;\n    k1 = (k1 & 65535) * c1 + (((k1 >>> 16) * c1 & 65535) << 16) & 4294967295;\n    k1 = k1 << 15 | k1 >>> 17;\n    k1 = (k1 & 65535) * c2 + (((k1 >>> 16) * c2 & 65535) << 16) & 4294967295;\n    h1 ^= k1;\n    h1 = h1 << 13 | h1 >>> 19;\n    h1b = (h1 & 65535) * 5 + (((h1 >>> 16) * 5 & 65535) << 16) & 4294967295;\n    h1 = (h1b & 65535) + 27492 + (((h1b >>> 16) + 58964 & 65535) << 16);\n  }\n  k1 = 0;\n  switch (remainder) {\n    case 3: {\n      k1 ^= (key[i + 2] & 255) << 16;\n    }\n    case 2: {\n      k1 ^= (key[i + 1] & 255) << 8;\n    }\n    case 1: {\n      k1 ^= key[i] & 255;\n      k1 = (k1 & 65535) * c1 + (((k1 >>> 16) * c1 & 65535) << 16) & 4294967295;\n      k1 = k1 << 15 | k1 >>> 17;\n      k1 = (k1 & 65535) * c2 + (((k1 >>> 16) * c2 & 65535) << 16) & 4294967295;\n      h1 ^= k1;\n    }\n  }\n  h1 ^= key.length;\n  h1 ^= h1 >>> 16;\n  h1 = (h1 & 65535) * 2246822507 + (((h1 >>> 16) * 2246822507 & 65535) << 16) & 4294967295;\n  h1 ^= h1 >>> 13;\n  h1 = (h1 & 65535) * 3266489909 + (((h1 >>> 16) * 3266489909 & 65535) << 16) & 4294967295;\n  h1 ^= h1 >>> 16;\n  return h1 >>> 0;\n}\nfunction createBuffer(val) {\n  return new TextEncoder().encode(val);\n}\n\nexport { sha256base64 as digest, hash, murmurHash, objectHash, objectHash as serialize, sha256, sha256base64 };\n", "import { hashCode, defineHeadPlugin, processTemplateParams } from '@unhead/shared';\nimport { createDefu, defu } from 'defu';\nimport { hasProtocol, withBase, withoutTrailingSlash, hasTrailingSlash, withTrailingSlash, joinURL } from 'ufo';\nimport { hash } from 'ohash';\n\nfunction defineSchemaOrgResolver(schema) {\n  return schema;\n}\n\nfunction idReference(node) {\n  return {\n    \"@id\": typeof node !== \"string\" ? node[\"@id\"] : node\n  };\n}\nfunction resolvableDateToDate(val) {\n  try {\n    const date = val instanceof Date ? val : new Date(Date.parse(val));\n    return `${date.getFullYear()}-${date.getMonth()}-${date.getDate()}`;\n  } catch (e) {\n  }\n  return typeof val === \"string\" ? val : val.toString();\n}\nconst IS_VALID_W3C_DATE = [\n  /(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))/,\n  /^\\d{4}-[01]\\d-[0-3]\\d$/,\n  /^\\d{4}-[01]\\d$/,\n  /^\\d{4}$/\n];\nfunction isValidW3CDate(d) {\n  return IS_VALID_W3C_DATE.some((r) => r.test(d));\n}\nfunction resolvableDateToIso(val) {\n  if (!val)\n    return val;\n  try {\n    if (val instanceof Date)\n      return val.toISOString();\n    else if (isValidW3CDate(val))\n      return val;\n    else\n      return new Date(Date.parse(val)).toISOString();\n  } catch (e) {\n  }\n  return typeof val === \"string\" ? val : val.toString();\n}\nconst IdentityId = \"#identity\";\nfunction setIfEmpty(node, field, value) {\n  if (!node?.[field] && value)\n    node[field] = value;\n}\nfunction asArray(input) {\n  return Array.isArray(input) ? input : [input];\n}\nfunction dedupeMerge(node, field, value) {\n  const data = new Set(asArray(node[field]));\n  data.add(value);\n  node[field] = [...data].filter(Boolean);\n}\nfunction prefixId(url, id) {\n  if (hasProtocol(id))\n    return id;\n  if (!id.includes(\"#\"))\n    id = `#${id}`;\n  return withBase(id, url);\n}\nfunction trimLength(val, length) {\n  if (!val)\n    return val;\n  if (val.length > length) {\n    const trimmedString = val.substring(0, length);\n    return trimmedString.substring(0, Math.min(trimmedString.length, trimmedString.lastIndexOf(\" \")));\n  }\n  return val;\n}\nfunction resolveDefaultType(node, defaultType) {\n  const val = node[\"@type\"];\n  if (val === defaultType)\n    return;\n  const types = /* @__PURE__ */ new Set([\n    ...asArray(defaultType),\n    ...asArray(val)\n  ]);\n  node[\"@type\"] = types.size === 1 ? val : [...types.values()];\n}\nfunction resolveWithBase(base, urlOrPath) {\n  if (!urlOrPath || hasProtocol(urlOrPath) || urlOrPath[0] !== \"/\" && urlOrPath[0] !== \"#\")\n    return urlOrPath;\n  return withBase(urlOrPath, base);\n}\nfunction resolveAsGraphKey(key) {\n  if (!key)\n    return key;\n  return key.substring(key.lastIndexOf(\"#\"));\n}\nfunction stripEmptyProperties(obj) {\n  for (const k in obj) {\n    if (!Object.prototype.hasOwnProperty.call(obj, k)) {\n      continue;\n    }\n    if (obj[k] && typeof obj[k] === \"object\") {\n      if (obj[k].__v_isReadonly || obj[k].__v_isRef)\n        return;\n      stripEmptyProperties(obj[k]);\n      return;\n    }\n    if (obj[k] === \"\" || obj[k] === null || obj[k] === void 0)\n      delete obj[k];\n  }\n  return obj;\n}\n\nconst quantitativeValueResolver = defineSchemaOrgResolver({\n  cast(node) {\n    if (typeof node === \"number\") {\n      return {\n        value: node\n      };\n    }\n    return node;\n  },\n  defaults: {\n    \"@type\": \"QuantitativeValue\"\n  }\n});\nconst monetaryAmountResolver = defineSchemaOrgResolver({\n  defaults: {\n    \"@type\": \"MonetaryAmount\"\n  },\n  resolve(node, ctx) {\n    if (typeof node.value !== \"number\")\n      node.value = resolveRelation(node.value, ctx, quantitativeValueResolver);\n    return node;\n  }\n});\n\nconst merchantReturnPolicyResolver = defineSchemaOrgResolver({\n  defaults: {\n    \"@type\": \"MerchantReturnPolicy\"\n  },\n  resolve(node, ctx) {\n    if (node.returnPolicyCategory)\n      node.returnPolicyCategory = withBase(node.returnPolicyCategory, \"https://schema.org/\");\n    if (node.returnFees)\n      node.returnFees = withBase(node.returnFees, \"https://schema.org/\");\n    if (node.returnMethod)\n      node.returnMethod = withBase(node.returnMethod, \"https://schema.org/\");\n    node.returnShippingFeesAmount = resolveRelation(node.returnShippingFeesAmount, ctx, monetaryAmountResolver);\n    return node;\n  }\n});\n\nconst definedRegionResolver = defineSchemaOrgResolver({\n  defaults: {\n    \"@type\": \"DefinedRegion\"\n  }\n});\n\nconst shippingDeliveryTimeResolver = defineSchemaOrgResolver({\n  defaults: {\n    \"@type\": \"ShippingDeliveryTime\"\n  },\n  resolve(node, ctx) {\n    node.handlingTime = resolveRelation(node.handlingTime, ctx, quantitativeValueResolver);\n    node.transitTime = resolveRelation(node.transitTime, ctx, quantitativeValueResolver);\n    return node;\n  }\n});\n\nconst offerShippingDetailsResolver = defineSchemaOrgResolver({\n  defaults: {\n    \"@type\": \"OfferShippingDetails\"\n  },\n  resolve(node, ctx) {\n    node.deliveryTime = resolveRelation(node.deliveryTime, ctx, shippingDeliveryTimeResolver);\n    node.shippingDestination = resolveRelation(node.shippingDestination, ctx, definedRegionResolver);\n    node.shippingRate = resolveRelation(node.shippingRate, ctx, monetaryAmountResolver);\n    return node;\n  }\n});\n\nconst offerResolver = defineSchemaOrgResolver({\n  cast(node) {\n    if (typeof node === \"number\" || typeof node === \"string\") {\n      return {\n        price: node\n      };\n    }\n    return node;\n  },\n  defaults: {\n    \"@type\": \"Offer\",\n    \"availability\": \"InStock\"\n  },\n  resolve(node, ctx) {\n    setIfEmpty(node, \"priceCurrency\", ctx.meta.currency);\n    setIfEmpty(node, \"priceValidUntil\", new Date(Date.UTC((/* @__PURE__ */ new Date()).getFullYear() + 1, 12, -1, 0, 0, 0)));\n    if (node.url)\n      resolveWithBase(ctx.meta.host, node.url);\n    if (node.availability)\n      node.availability = withBase(node.availability, \"https://schema.org/\");\n    if (node.itemCondition)\n      node.itemCondition = withBase(node.itemCondition, \"https://schema.org/\");\n    if (node.priceValidUntil)\n      node.priceValidUntil = resolvableDateToIso(node.priceValidUntil);\n    node.hasMerchantReturnPolicy = resolveRelation(node.hasMerchantReturnPolicy, ctx, merchantReturnPolicyResolver);\n    node.shippingDetails = resolveRelation(node.shippingDetails, ctx, offerShippingDetailsResolver);\n    return node;\n  }\n});\n\nconst aggregateOfferResolver = defineSchemaOrgResolver({\n  defaults: {\n    \"@type\": \"AggregateOffer\"\n  },\n  inheritMeta: [\n    { meta: \"currency\", key: \"priceCurrency\" }\n  ],\n  resolve(node, ctx) {\n    node.offers = resolveRelation(node.offers, ctx, offerResolver);\n    if (node.offers)\n      setIfEmpty(node, \"offerCount\", asArray(node.offers).length);\n    return node;\n  }\n});\n\nconst aggregateRatingResolver = defineSchemaOrgResolver({\n  defaults: {\n    \"@type\": \"AggregateRating\"\n  }\n});\n\nconst listItemResolver = defineSchemaOrgResolver({\n  cast(node) {\n    if (typeof node === \"string\") {\n      node = {\n        name: node\n      };\n    }\n    return node;\n  },\n  defaults: {\n    \"@type\": \"ListItem\"\n  },\n  resolve(node, ctx) {\n    if (typeof node.item === \"string\")\n      node.item = resolveWithBase(ctx.meta.host, node.item);\n    else if (typeof node.item === \"object\")\n      node.item = resolveRelation(node.item, ctx);\n    return node;\n  }\n});\n\nconst PrimaryBreadcrumbId = \"#breadcrumb\";\nconst breadcrumbResolver = defineSchemaOrgResolver({\n  defaults: {\n    \"@type\": \"BreadcrumbList\"\n  },\n  idPrefix: [\"url\", PrimaryBreadcrumbId],\n  resolve(breadcrumb, ctx) {\n    if (breadcrumb.itemListElement) {\n      let index = 1;\n      breadcrumb.itemListElement = resolveRelation(breadcrumb.itemListElement, ctx, listItemResolver, {\n        array: true,\n        afterResolve(node) {\n          setIfEmpty(node, \"position\", index++);\n        }\n      });\n    }\n    return breadcrumb;\n  },\n  resolveRootNode(node, { find }) {\n    const webPage = find(PrimaryWebPageId);\n    if (webPage)\n      setIfEmpty(webPage, \"breadcrumb\", idReference(node));\n  }\n});\n\nconst imageResolver = defineSchemaOrgResolver({\n  alias: \"image\",\n  cast(input) {\n    if (typeof input === \"string\") {\n      input = {\n        url: input\n      };\n    }\n    return input;\n  },\n  defaults: {\n    \"@type\": \"ImageObject\"\n  },\n  inheritMeta: [\n    // @todo possibly only do if there's a caption\n    \"inLanguage\"\n  ],\n  idPrefix: \"host\",\n  resolve(image, { meta }) {\n    image.url = resolveWithBase(meta.host, image.url);\n    setIfEmpty(image, \"contentUrl\", image.url);\n    if (image.height && !image.width)\n      delete image.height;\n    if (image.width && !image.height)\n      delete image.width;\n    return image;\n  }\n});\n\nconst addressResolver = defineSchemaOrgResolver({\n  defaults: {\n    \"@type\": \"PostalAddress\"\n  }\n});\n\nconst searchActionResolver = defineSchemaOrgResolver({\n  defaults: {\n    \"@type\": \"SearchAction\",\n    \"target\": {\n      \"@type\": \"EntryPoint\"\n    },\n    \"query-input\": {\n      \"@type\": \"PropertyValueSpecification\",\n      \"valueRequired\": true,\n      \"valueName\": \"search_term_string\"\n    }\n  },\n  resolve(node, ctx) {\n    if (typeof node.target === \"string\") {\n      node.target = {\n        \"@type\": \"EntryPoint\",\n        \"urlTemplate\": resolveWithBase(ctx.meta.host, node.target)\n      };\n    }\n    return node;\n  }\n});\n\nconst PrimaryWebSiteId = \"#website\";\nconst webSiteResolver = defineSchemaOrgResolver({\n  defaults: {\n    \"@type\": \"WebSite\"\n  },\n  inheritMeta: [\n    \"inLanguage\",\n    { meta: \"host\", key: \"url\" }\n  ],\n  idPrefix: [\"host\", PrimaryWebSiteId],\n  resolve(node, ctx) {\n    node.potentialAction = resolveRelation(node.potentialAction, ctx, searchActionResolver, {\n      array: true\n    });\n    node.publisher = resolveRelation(node.publisher, ctx);\n    return node;\n  },\n  resolveRootNode(node, { find }) {\n    if (resolveAsGraphKey(node[\"@id\"]) === PrimaryWebSiteId) {\n      const identity = find(IdentityId);\n      if (identity)\n        setIfEmpty(node, \"publisher\", idReference(identity));\n      const webPage = find(PrimaryWebPageId);\n      if (webPage)\n        setIfEmpty(webPage, \"isPartOf\", idReference(node));\n    }\n    return node;\n  }\n});\n\nconst organizationResolver = defineSchemaOrgResolver({\n  defaults: {\n    \"@type\": \"Organization\"\n  },\n  idPrefix: [\"host\", IdentityId],\n  inheritMeta: [\n    { meta: \"host\", key: \"url\" }\n  ],\n  resolve(node, ctx) {\n    resolveDefaultType(node, \"Organization\");\n    node.address = resolveRelation(node.address, ctx, addressResolver);\n    return node;\n  },\n  resolveRootNode(node, ctx) {\n    const isIdentity = resolveAsGraphKey(node[\"@id\"]) === IdentityId;\n    const webPage = ctx.find(PrimaryWebPageId);\n    if (node.logo && isIdentity) {\n      if (!ctx.find(\"#organization\")) {\n        const logoNode = resolveRelation(node.logo, ctx, imageResolver, {\n          root: true,\n          afterResolve(logo) {\n            logo[\"@id\"] = prefixId(ctx.meta.host, \"#logo\");\n            setIfEmpty(logo, \"caption\", node.name);\n          }\n        });\n        if (webPage && logoNode)\n          setIfEmpty(webPage, \"primaryImageOfPage\", idReference(logoNode));\n        ctx.nodes.push({\n          // we want to make a simple node that has the essentials, this will allow parent nodes to inject\n          // as well without inserting invalid data (i.e LocalBusiness operatingHours)\n          \"@type\": \"Organization\",\n          \"name\": node.name,\n          \"url\": node.url,\n          \"sameAs\": node.sameAs,\n          // 'image': idReference(logoNode),\n          \"address\": node.address,\n          // needs to be a URL\n          \"logo\": resolveRelation(node.logo, ctx, imageResolver, { root: false }).url,\n          \"_priority\": -1,\n          \"@id\": prefixId(ctx.meta.host, \"#organization\")\n          // avoid the id so nothing can link to it\n        });\n      }\n      delete node.logo;\n    }\n    if (isIdentity && webPage)\n      setIfEmpty(webPage, \"about\", idReference(node));\n    const webSite = ctx.find(PrimaryWebSiteId);\n    if (webSite)\n      setIfEmpty(webSite, \"publisher\", idReference(node));\n  }\n});\n\nconst readActionResolver = defineSchemaOrgResolver({\n  defaults: {\n    \"@type\": \"ReadAction\"\n  },\n  resolve(node, ctx) {\n    if (!node.target.includes(ctx.meta.url))\n      node.target.unshift(ctx.meta.url);\n    return node;\n  }\n});\n\nconst PrimaryWebPageId = \"#webpage\";\nconst webPageResolver = defineSchemaOrgResolver({\n  defaults({ meta }) {\n    const endPath = withoutTrailingSlash(meta.url.substring(meta.url.lastIndexOf(\"/\") + 1));\n    let type = \"WebPage\";\n    switch (endPath) {\n      case \"about\":\n      case \"about-us\":\n        type = \"AboutPage\";\n        break;\n      case \"search\":\n        type = \"SearchResultsPage\";\n        break;\n      case \"checkout\":\n        type = \"CheckoutPage\";\n        break;\n      case \"contact\":\n      case \"get-in-touch\":\n      case \"contact-us\":\n        type = \"ContactPage\";\n        break;\n      case \"faq\":\n        type = \"FAQPage\";\n        break;\n    }\n    const defaults = {\n      \"@type\": type\n    };\n    return defaults;\n  },\n  idPrefix: [\"url\", PrimaryWebPageId],\n  inheritMeta: [\n    { meta: \"title\", key: \"name\" },\n    \"description\",\n    \"datePublished\",\n    \"dateModified\",\n    \"url\"\n  ],\n  resolve(node, ctx) {\n    node.dateModified = resolvableDateToIso(node.dateModified);\n    node.datePublished = resolvableDateToIso(node.datePublished);\n    resolveDefaultType(node, \"WebPage\");\n    node.about = resolveRelation(node.about, ctx, organizationResolver);\n    node.breadcrumb = resolveRelation(node.breadcrumb, ctx, breadcrumbResolver);\n    node.author = resolveRelation(node.author, ctx, personResolver);\n    node.primaryImageOfPage = resolveRelation(node.primaryImageOfPage, ctx, imageResolver);\n    node.potentialAction = resolveRelation(node.potentialAction, ctx, readActionResolver);\n    if (node[\"@type\"] === \"WebPage\" && ctx.meta.url) {\n      setIfEmpty(node, \"potentialAction\", [\n        {\n          \"@type\": \"ReadAction\",\n          \"target\": [ctx.meta.url]\n        }\n      ]);\n    }\n    return node;\n  },\n  resolveRootNode(webPage, { find, meta }) {\n    const identity = find(IdentityId);\n    const webSite = find(PrimaryWebSiteId);\n    const logo = find(\"#logo\");\n    if (identity && meta.url === meta.host)\n      setIfEmpty(webPage, \"about\", idReference(identity));\n    if (logo)\n      setIfEmpty(webPage, \"primaryImageOfPage\", idReference(logo));\n    if (webSite)\n      setIfEmpty(webPage, \"isPartOf\", idReference(webSite));\n    const breadcrumb = find(PrimaryBreadcrumbId);\n    if (breadcrumb)\n      setIfEmpty(webPage, \"breadcrumb\", idReference(breadcrumb));\n    return webPage;\n  }\n});\n\nconst personResolver = defineSchemaOrgResolver({\n  cast(node) {\n    if (typeof node === \"string\") {\n      return {\n        name: node\n      };\n    }\n    return node;\n  },\n  defaults: {\n    \"@type\": \"Person\"\n  },\n  idPrefix: [\"host\", IdentityId],\n  resolve(node, ctx) {\n    if (node.url)\n      node.url = resolveWithBase(ctx.meta.host, node.url);\n    return node;\n  },\n  resolveRootNode(node, { find, meta }) {\n    if (resolveAsGraphKey(node[\"@id\"]) === IdentityId) {\n      setIfEmpty(node, \"url\", meta.host);\n      const webPage = find(PrimaryWebPageId);\n      if (webPage)\n        setIfEmpty(webPage, \"about\", idReference(node));\n      const webSite = find(PrimaryWebSiteId);\n      if (webSite)\n        setIfEmpty(webSite, \"publisher\", idReference(node));\n    }\n    const article = find(PrimaryArticleId);\n    if (article)\n      setIfEmpty(article, \"author\", idReference(node));\n  }\n});\n\nconst PrimaryArticleId = \"#article\";\nconst articleResolver = defineSchemaOrgResolver({\n  defaults: {\n    \"@type\": \"Article\"\n  },\n  inheritMeta: [\n    \"inLanguage\",\n    \"description\",\n    \"image\",\n    \"dateModified\",\n    \"datePublished\",\n    { meta: \"title\", key: \"headline\" }\n  ],\n  idPrefix: [\"url\", PrimaryArticleId],\n  resolve(node, ctx) {\n    node.author = resolveRelation(node.author, ctx, personResolver, {\n      root: true\n    });\n    node.publisher = resolveRelation(node.publisher, ctx);\n    node.dateModified = resolvableDateToIso(node.dateModified);\n    node.datePublished = resolvableDateToIso(node.datePublished);\n    resolveDefaultType(node, \"Article\");\n    node.headline = trimLength(node.headline, 110);\n    return node;\n  },\n  resolveRootNode(node, { find, meta }) {\n    const webPage = find(PrimaryWebPageId);\n    const identity = find(IdentityId);\n    if (node.image && !node.thumbnailUrl) {\n      const firstImage = asArray(node.image)[0];\n      if (typeof firstImage === \"string\")\n        setIfEmpty(node, \"thumbnailUrl\", resolveWithBase(meta.host, firstImage));\n      else if (firstImage?.[\"@id\"])\n        setIfEmpty(node, \"thumbnailUrl\", find(firstImage[\"@id\"])?.url);\n    }\n    if (identity) {\n      setIfEmpty(node, \"publisher\", idReference(identity));\n      setIfEmpty(node, \"author\", idReference(identity));\n    }\n    if (webPage) {\n      setIfEmpty(node, \"isPartOf\", idReference(webPage));\n      setIfEmpty(node, \"mainEntityOfPage\", idReference(webPage));\n      setIfEmpty(webPage, \"potentialAction\", [\n        {\n          \"@type\": \"ReadAction\",\n          \"target\": [meta.url]\n        }\n      ]);\n      setIfEmpty(webPage, \"dateModified\", node.dateModified);\n      setIfEmpty(webPage, \"datePublished\", node.datePublished);\n    }\n    return node;\n  }\n});\n\nconst bookEditionResolver = defineSchemaOrgResolver({\n  defaults: {\n    \"@type\": \"Book\"\n  },\n  inheritMeta: [\n    \"inLanguage\"\n  ],\n  resolve(node, ctx) {\n    if (node.bookFormat)\n      node.bookFormat = withBase(node.bookFormat, \"https://schema.org/\");\n    if (node.datePublished)\n      node.datePublished = resolvableDateToDate(node.datePublished);\n    node.author = resolveRelation(node.author, ctx);\n    return node;\n  },\n  resolveRootNode(node, { find }) {\n    const identity = find(IdentityId);\n    if (identity)\n      setIfEmpty(node, \"provider\", idReference(identity));\n    return node;\n  }\n});\nconst PrimaryBookId = \"#book\";\nconst bookResolver = defineSchemaOrgResolver({\n  defaults: {\n    \"@type\": \"Book\"\n  },\n  inheritMeta: [\n    \"description\",\n    \"url\",\n    { meta: \"title\", key: \"name\" }\n  ],\n  idPrefix: [\"url\", PrimaryBookId],\n  resolve(node, ctx) {\n    node.workExample = resolveRelation(node.workExample, ctx, bookEditionResolver);\n    node.author = resolveRelation(node.author, ctx);\n    if (node.url)\n      withBase(node.url, ctx.meta.host);\n    return node;\n  },\n  resolveRootNode(node, { find }) {\n    const identity = find(IdentityId);\n    if (identity)\n      setIfEmpty(node, \"author\", idReference(identity));\n    return node;\n  }\n});\n\nconst commentResolver = defineSchemaOrgResolver({\n  defaults: {\n    \"@type\": \"Comment\"\n  },\n  idPrefix: \"url\",\n  resolve(node, ctx) {\n    node.author = resolveRelation(node.author, ctx, personResolver, {\n      root: true\n    });\n    return node;\n  },\n  resolveRootNode(node, { find }) {\n    const article = find(PrimaryArticleId);\n    if (article)\n      setIfEmpty(node, \"about\", idReference(article));\n  }\n});\n\nconst courseResolver = defineSchemaOrgResolver({\n  defaults: {\n    \"@type\": \"Course\"\n  },\n  resolve(node, ctx) {\n    node.provider = resolveRelation(node.provider, ctx, organizationResolver, {\n      root: true\n    });\n    return node;\n  },\n  resolveRootNode(node, { find }) {\n    const identity = find(IdentityId);\n    if (identity)\n      setIfEmpty(node, \"provider\", idReference(identity));\n    return node;\n  }\n});\n\nconst placeResolver = defineSchemaOrgResolver({\n  defaults: {\n    \"@type\": \"Place\"\n  },\n  resolve(node, ctx) {\n    if (typeof node.address !== \"string\")\n      node.address = resolveRelation(node.address, ctx, addressResolver);\n    return node;\n  }\n});\n\nconst virtualLocationResolver = defineSchemaOrgResolver({\n  cast(node) {\n    if (typeof node === \"string\") {\n      return {\n        url: node\n      };\n    }\n    return node;\n  },\n  defaults: {\n    \"@type\": \"VirtualLocation\"\n  }\n});\n\nconst PrimaryEventId = \"#event\";\nconst eventResolver = defineSchemaOrgResolver({\n  defaults: {\n    \"@type\": \"Event\"\n  },\n  inheritMeta: [\n    \"inLanguage\",\n    \"description\",\n    \"image\",\n    { meta: \"title\", key: \"name\" }\n  ],\n  idPrefix: [\"url\", PrimaryEventId],\n  resolve(node, ctx) {\n    if (node.location) {\n      const isVirtual = node.location === \"string\" || node.location?.url !== \"undefined\";\n      node.location = resolveRelation(node.location, ctx, isVirtual ? virtualLocationResolver : placeResolver);\n    }\n    node.performer = resolveRelation(node.performer, ctx, personResolver, {\n      root: true\n    });\n    node.organizer = resolveRelation(node.organizer, ctx, organizationResolver, {\n      root: true\n    });\n    node.offers = resolveRelation(node.offers, ctx, offerResolver);\n    if (node.eventAttendanceMode)\n      node.eventAttendanceMode = withBase(node.eventAttendanceMode, \"https://schema.org/\");\n    if (node.eventStatus)\n      node.eventStatus = withBase(node.eventStatus, \"https://schema.org/\");\n    const isOnline = node.eventStatus === \"https://schema.org/EventMovedOnline\";\n    const dates = [\"startDate\", \"previousStartDate\", \"endDate\"];\n    dates.forEach((date) => {\n      if (!isOnline) {\n        if (node[date] instanceof Date && node[date].getHours() === 0 && node[date].getMinutes() === 0)\n          node[date] = resolvableDateToDate(node[date]);\n      } else {\n        node[date] = resolvableDateToIso(node[date]);\n      }\n    });\n    setIfEmpty(node, \"endDate\", node.startDate);\n    return node;\n  },\n  resolveRootNode(node, { find }) {\n    const identity = find(IdentityId);\n    if (identity)\n      setIfEmpty(node, \"organizer\", idReference(identity));\n  }\n});\n\nconst openingHoursResolver = defineSchemaOrgResolver({\n  defaults: {\n    \"@type\": \"OpeningHoursSpecification\",\n    \"opens\": \"00:00\",\n    \"closes\": \"23:59\"\n  }\n});\n\nconst localBusinessResolver = defineSchemaOrgResolver({\n  defaults: {\n    \"@type\": [\"Organization\", \"LocalBusiness\"]\n  },\n  inheritMeta: [\n    { key: \"url\", meta: \"host\" },\n    { key: \"currenciesAccepted\", meta: \"currency\" }\n  ],\n  idPrefix: [\"host\", IdentityId],\n  resolve(node, ctx) {\n    resolveDefaultType(node, [\"Organization\", \"LocalBusiness\"]);\n    node.address = resolveRelation(node.address, ctx, addressResolver);\n    node.openingHoursSpecification = resolveRelation(node.openingHoursSpecification, ctx, openingHoursResolver);\n    node = resolveNode({ ...node }, ctx, organizationResolver);\n    return node;\n  },\n  resolveRootNode(node, ctx) {\n    organizationResolver.resolveRootNode(node, ctx);\n    return node;\n  }\n});\n\nconst ratingResolver = defineSchemaOrgResolver({\n  cast(node) {\n    if (node === \"number\") {\n      return {\n        ratingValue: node\n      };\n    }\n    return node;\n  },\n  defaults: {\n    \"@type\": \"Rating\",\n    \"bestRating\": 5,\n    \"worstRating\": 1\n  }\n});\n\nconst foodEstablishmentResolver = defineSchemaOrgResolver({\n  defaults: {\n    \"@type\": [\"Organization\", \"LocalBusiness\", \"FoodEstablishment\"]\n  },\n  inheritMeta: [\n    { key: \"url\", meta: \"host\" },\n    { key: \"currenciesAccepted\", meta: \"currency\" }\n  ],\n  idPrefix: [\"host\", IdentityId],\n  resolve(node, ctx) {\n    resolveDefaultType(node, [\"Organization\", \"LocalBusiness\", \"FoodEstablishment\"]);\n    node.starRating = resolveRelation(node.starRating, ctx, ratingResolver);\n    node = resolveNode(node, ctx, localBusinessResolver);\n    return node;\n  },\n  resolveRootNode(node, ctx) {\n    localBusinessResolver.resolveRootNode(node, ctx);\n    return node;\n  }\n});\n\nconst howToStepDirectionResolver = defineSchemaOrgResolver({\n  cast(node) {\n    if (typeof node === \"string\") {\n      return {\n        text: node\n      };\n    }\n    return node;\n  },\n  defaults: {\n    \"@type\": \"HowToDirection\"\n  }\n});\n\nconst howToStepResolver = defineSchemaOrgResolver({\n  cast(node) {\n    if (typeof node === \"string\") {\n      return {\n        text: node\n      };\n    }\n    return node;\n  },\n  defaults: {\n    \"@type\": \"HowToStep\"\n  },\n  resolve(step, ctx) {\n    if (step.url)\n      step.url = resolveWithBase(ctx.meta.url, step.url);\n    if (step.image) {\n      step.image = resolveRelation(step.image, ctx, imageResolver, {\n        root: true\n      });\n    }\n    if (step.itemListElement)\n      step.itemListElement = resolveRelation(step.itemListElement, ctx, howToStepDirectionResolver);\n    return step;\n  }\n});\n\nconst HowToId = \"#howto\";\nconst howToResolver = defineSchemaOrgResolver({\n  defaults: {\n    \"@type\": \"HowTo\"\n  },\n  inheritMeta: [\n    \"description\",\n    \"image\",\n    \"inLanguage\",\n    { meta: \"title\", key: \"name\" }\n  ],\n  idPrefix: [\"url\", HowToId],\n  resolve(node, ctx) {\n    node.step = resolveRelation(node.step, ctx, howToStepResolver);\n    return node;\n  },\n  resolveRootNode(node, { find }) {\n    const webPage = find(PrimaryWebPageId);\n    if (webPage)\n      setIfEmpty(node, \"mainEntityOfPage\", idReference(webPage));\n  }\n});\n\nconst itemListResolver = defineSchemaOrgResolver({\n  defaults: {\n    \"@type\": \"ItemList\"\n  },\n  resolve(node, ctx) {\n    if (node.itemListElement) {\n      let index = 1;\n      node.itemListElement = resolveRelation(node.itemListElement, ctx, listItemResolver, {\n        array: true,\n        afterResolve(node2) {\n          setIfEmpty(node2, \"position\", index++);\n        }\n      });\n    }\n    return node;\n  }\n});\n\nconst jobPostingResolver = defineSchemaOrgResolver({\n  defaults: {\n    \"@type\": \"JobPosting\"\n  },\n  idPrefix: [\"url\", \"#job-posting\"],\n  resolve(node, ctx) {\n    node.datePosted = resolvableDateToIso(node.datePosted);\n    node.hiringOrganization = resolveRelation(node.hiringOrganization, ctx, organizationResolver);\n    node.jobLocation = resolveRelation(node.jobLocation, ctx, placeResolver);\n    node.baseSalary = resolveRelation(node.baseSalary, ctx, monetaryAmountResolver);\n    node.validThrough = resolvableDateToIso(node.validThrough);\n    return node;\n  },\n  resolveRootNode(jobPosting, { find }) {\n    const webPage = find(PrimaryWebPageId);\n    const identity = find(IdentityId);\n    if (identity)\n      setIfEmpty(jobPosting, \"hiringOrganization\", idReference(identity));\n    if (webPage)\n      setIfEmpty(jobPosting, \"mainEntityOfPage\", idReference(webPage));\n    return jobPosting;\n  }\n});\n\nconst reviewResolver = defineSchemaOrgResolver({\n  defaults: {\n    \"@type\": \"Review\"\n  },\n  inheritMeta: [\n    \"inLanguage\"\n  ],\n  resolve(review, ctx) {\n    review.reviewRating = resolveRelation(review.reviewRating, ctx, ratingResolver);\n    review.author = resolveRelation(review.author, ctx, personResolver);\n    return review;\n  }\n});\n\nconst videoResolver = defineSchemaOrgResolver({\n  cast(input) {\n    if (typeof input === \"string\") {\n      input = {\n        url: input\n      };\n    }\n    return input;\n  },\n  alias: \"video\",\n  defaults: {\n    \"@type\": \"VideoObject\"\n  },\n  inheritMeta: [\n    { meta: \"title\", key: \"name\" },\n    \"description\",\n    \"image\",\n    \"inLanguage\",\n    { meta: \"datePublished\", key: \"uploadDate\" }\n  ],\n  idPrefix: \"host\",\n  resolve(video, ctx) {\n    if (video.uploadDate)\n      video.uploadDate = resolvableDateToIso(video.uploadDate);\n    video.url = resolveWithBase(ctx.meta.host, video.url);\n    if (video.caption && !video.description)\n      video.description = video.caption;\n    if (!video.description)\n      video.description = \"No description\";\n    if (video.thumbnailUrl && (typeof video.thumbnailUrl === \"string\" || Array.isArray(video.thumbnailUrl))) {\n      const images = asArray(video.thumbnailUrl).map((image) => resolveWithBase(ctx.meta.host, image));\n      video.thumbnailUrl = images.length > 1 ? images : images[0];\n    }\n    if (video.thumbnail)\n      video.thumbnail = resolveRelation(video.thumbnailUrl, ctx, imageResolver);\n    return video;\n  },\n  resolveRootNode(video, { find }) {\n    if (video.image && !video.thumbnail) {\n      const firstImage = asArray(video.image)[0];\n      setIfEmpty(video, \"thumbnail\", find(firstImage[\"@id\"])?.url);\n    }\n  }\n});\n\nconst movieResolver = defineSchemaOrgResolver({\n  defaults: {\n    \"@type\": \"Movie\"\n  },\n  resolve(node, ctx) {\n    node.aggregateRating = resolveRelation(node.aggregateRating, ctx, aggregateRatingResolver);\n    node.review = resolveRelation(node.review, ctx, reviewResolver);\n    node.director = resolveRelation(node.director, ctx, personResolver);\n    node.actor = resolveRelation(node.actor, ctx, personResolver);\n    node.trailer = resolveRelation(node.trailer, ctx, videoResolver);\n    if (node.dateCreated)\n      node.dateCreated = resolvableDateToDate(node.dateCreated);\n    return node;\n  }\n});\n\nconst ProductId = \"#product\";\nconst productResolver = defineSchemaOrgResolver({\n  defaults: {\n    \"@type\": \"Product\"\n  },\n  inheritMeta: [\n    \"description\",\n    \"image\",\n    { meta: \"title\", key: \"name\" }\n  ],\n  idPrefix: [\"url\", ProductId],\n  resolve(node, ctx) {\n    setIfEmpty(node, \"sku\", hash(node.name));\n    node.aggregateOffer = resolveRelation(node.aggregateOffer, ctx, aggregateOfferResolver);\n    node.aggregateRating = resolveRelation(node.aggregateRating, ctx, aggregateRatingResolver);\n    node.offers = resolveRelation(node.offers, ctx, offerResolver);\n    node.review = resolveRelation(node.review, ctx, reviewResolver);\n    return node;\n  },\n  resolveRootNode(product, { find }) {\n    const webPage = find(PrimaryWebPageId);\n    const identity = find(IdentityId);\n    if (identity)\n      setIfEmpty(product, \"brand\", idReference(identity));\n    if (webPage)\n      setIfEmpty(product, \"mainEntityOfPage\", idReference(webPage));\n    return product;\n  }\n});\n\nconst answerResolver = defineSchemaOrgResolver({\n  cast(node) {\n    if (typeof node === \"string\") {\n      return {\n        text: node\n      };\n    }\n    return node;\n  },\n  defaults: {\n    \"@type\": \"Answer\"\n  }\n});\n\nconst questionResolver = defineSchemaOrgResolver({\n  defaults: {\n    \"@type\": \"Question\"\n  },\n  inheritMeta: [\n    \"inLanguage\"\n  ],\n  idPrefix: \"url\",\n  resolve(question, ctx) {\n    if (question.question) {\n      question.name = question.question;\n      delete question.question;\n    }\n    if (question.answer) {\n      question.acceptedAnswer = question.answer;\n      delete question.answer;\n    }\n    question.acceptedAnswer = resolveRelation(question.acceptedAnswer, ctx, answerResolver);\n    return question;\n  },\n  resolveRootNode(question, { find }) {\n    const webPage = find(PrimaryWebPageId);\n    if (webPage && asArray(webPage[\"@type\"]).includes(\"FAQPage\"))\n      dedupeMerge(webPage, \"mainEntity\", idReference(question));\n  }\n});\n\nconst RecipeId = \"#recipe\";\nconst recipeResolver = defineSchemaOrgResolver({\n  defaults: {\n    \"@type\": \"Recipe\"\n  },\n  inheritMeta: [\n    { meta: \"title\", key: \"name\" },\n    \"description\",\n    \"image\",\n    \"datePublished\"\n  ],\n  idPrefix: [\"url\", RecipeId],\n  resolve(node, ctx) {\n    node.recipeInstructions = resolveRelation(node.recipeInstructions, ctx, howToStepResolver);\n    return node;\n  },\n  resolveRootNode(node, { find }) {\n    const article = find(PrimaryArticleId);\n    const webPage = find(PrimaryWebPageId);\n    if (article)\n      setIfEmpty(node, \"mainEntityOfPage\", idReference(article));\n    else if (webPage)\n      setIfEmpty(node, \"mainEntityOfPage\", idReference(webPage));\n    if (article?.author)\n      setIfEmpty(node, \"author\", article.author);\n    return node;\n  }\n});\n\nconst softwareAppResolver = defineSchemaOrgResolver({\n  defaults: {\n    \"@type\": \"SoftwareApplication\"\n  },\n  resolve(node, ctx) {\n    resolveDefaultType(node, \"SoftwareApplication\");\n    node.offers = resolveRelation(node.offers, ctx, offerResolver);\n    node.aggregateRating = resolveRelation(node.aggregateRating, ctx, aggregateRatingResolver);\n    node.review = resolveRelation(node.review, ctx, reviewResolver);\n    return node;\n  }\n});\n\nfunction loadResolver(resolver) {\n  switch (resolver) {\n    case \"address\":\n      return addressResolver;\n    case \"aggregateOffer\":\n      return aggregateOfferResolver;\n    case \"aggregateRating\":\n      return aggregateRatingResolver;\n    case \"article\":\n      return articleResolver;\n    case \"breadcrumb\":\n      return breadcrumbResolver;\n    case \"comment\":\n      return commentResolver;\n    case \"event\":\n      return eventResolver;\n    case \"foodEstablishment\":\n      return foodEstablishmentResolver;\n    case \"virtualLocation\":\n      return virtualLocationResolver;\n    case \"place\":\n      return placeResolver;\n    case \"howTo\":\n      return howToResolver;\n    case \"howToStep\":\n      return howToStepResolver;\n    case \"image\":\n      return imageResolver;\n    case \"localBusiness\":\n      return localBusinessResolver;\n    case \"offer\":\n      return offerResolver;\n    case \"openingHours\":\n      return openingHoursResolver;\n    case \"organization\":\n      return organizationResolver;\n    case \"person\":\n      return personResolver;\n    case \"product\":\n      return productResolver;\n    case \"question\":\n      return questionResolver;\n    case \"recipe\":\n      return recipeResolver;\n    case \"review\":\n      return reviewResolver;\n    case \"video\":\n      return videoResolver;\n    case \"webPage\":\n      return webPageResolver;\n    case \"webSite\":\n      return webSiteResolver;\n    case \"book\":\n      return bookResolver;\n    case \"course\":\n      return courseResolver;\n    case \"itemList\":\n      return itemListResolver;\n    case \"jobPosting\":\n      return jobPostingResolver;\n    case \"listItem\":\n      return listItemResolver;\n    case \"movie\":\n      return movieResolver;\n    case \"searchAction\":\n      return searchActionResolver;\n    case \"readAction\":\n      return readActionResolver;\n    case \"softwareApp\":\n      return softwareAppResolver;\n    case \"bookEdition\":\n      return bookEditionResolver;\n  }\n  return null;\n}\n\nconst resolver = {\n  __proto__: null,\n  loadResolver: loadResolver\n};\n\nfunction resolveMeta(meta) {\n  if (!meta.host && meta.canonicalHost)\n    meta.host = meta.canonicalHost;\n  if (!meta.tagPosition && meta.position)\n    meta.tagPosition = meta.position;\n  if (!meta.currency && meta.defaultCurrency)\n    meta.currency = meta.defaultCurrency;\n  if (!meta.inLanguage && meta.defaultLanguage)\n    meta.inLanguage = meta.defaultLanguage;\n  if (!meta.path)\n    meta.path = \"/\";\n  if (!meta.host && typeof document !== \"undefined\")\n    meta.host = document.location.host;\n  if (!meta.url && meta.canonicalUrl)\n    meta.url = meta.canonicalUrl;\n  if (meta.path !== \"/\") {\n    if (meta.trailingSlash && !hasTrailingSlash(meta.path))\n      meta.path = withTrailingSlash(meta.path);\n    else if (!meta.trailingSlash && hasTrailingSlash(meta.path))\n      meta.path = withoutTrailingSlash(meta.path);\n  }\n  meta.url = joinURL(meta.host || \"\", meta.path);\n  return {\n    ...meta,\n    host: meta.host,\n    url: meta.url,\n    currency: meta.currency,\n    image: meta.image,\n    inLanguage: meta.inLanguage,\n    title: meta.title,\n    description: meta.description,\n    datePublished: meta.datePublished,\n    dateModified: meta.dateModified\n  };\n}\nfunction resolveNode(node, ctx, resolver) {\n  if (resolver?.cast)\n    node = resolver.cast(node, ctx);\n  if (resolver?.defaults) {\n    let defaults = resolver.defaults || {};\n    if (typeof defaults === \"function\")\n      defaults = defaults(ctx);\n    node = {\n      ...defaults,\n      ...node\n    };\n  }\n  resolver?.inheritMeta?.forEach((entry) => {\n    if (typeof entry === \"string\")\n      setIfEmpty(node, entry, ctx.meta[entry]);\n    else\n      setIfEmpty(node, entry.key, ctx.meta[entry.meta]);\n  });\n  if (resolver?.resolve)\n    node = resolver.resolve(node, ctx);\n  for (const k in node) {\n    const v = node[k];\n    if (Array.isArray(v)) {\n      v.forEach((v2, k2) => {\n        if (typeof v2 === \"object\" && v2?._resolver) {\n          node[k][k2] = resolveRelation(v2, ctx, v2._resolver);\n        }\n      });\n    }\n    if (typeof v === \"object\" && v?._resolver)\n      node[k] = resolveRelation(v, ctx, v._resolver);\n  }\n  stripEmptyProperties(node);\n  return node;\n}\nfunction resolveNodeId(node, ctx, resolver, resolveAsRoot = false) {\n  if (node[\"@id\"] && node[\"@id\"].startsWith(\"http\"))\n    return node;\n  const prefix = resolver ? (Array.isArray(resolver.idPrefix) ? resolver.idPrefix[0] : resolver.idPrefix) || \"url\" : \"url\";\n  const rootId = node[\"@id\"] || (resolver ? Array.isArray(resolver.idPrefix) ? resolver.idPrefix?.[1] : void 0 : \"\");\n  if (!node[\"@id\"] && resolveAsRoot && rootId) {\n    node[\"@id\"] = prefixId(ctx.meta[prefix], rootId);\n    return node;\n  }\n  if (node[\"@id\"]?.startsWith(\"#/schema/\") || node[\"@id\"]?.startsWith(\"/\")) {\n    node[\"@id\"] = prefixId(ctx.meta[prefix], node[\"@id\"]);\n    return node;\n  }\n  let alias = resolver?.alias;\n  if (!alias) {\n    const type = asArray(node[\"@type\"])?.[0] || \"\";\n    alias = type.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n  }\n  const hashNodeData = {};\n  for (const key in node) {\n    if (key[0] === \"_\") {\n      continue;\n    }\n    if (!Object.prototype.hasOwnProperty.call(node, key)) {\n      continue;\n    }\n    hashNodeData[key] = node[key];\n  }\n  node[\"@id\"] = prefixId(ctx.meta[prefix], `#/schema/${alias}/${node[\"@id\"] || hashCode(JSON.stringify(hashNodeData))}`);\n  return node;\n}\nfunction resolveRelation(input, ctx, fallbackResolver, options = {}) {\n  if (!input)\n    return input;\n  const ids = asArray(input).map((a) => {\n    const keys = Object.keys(a).length;\n    if (keys === 1 && a[\"@id\"] || keys === 2 && a[\"@id\"] && a[\"@type\"]) {\n      return resolveNodeId({\n        // we drop @type\n        \"@id\": ctx.find(a[\"@id\"])?.[\"@id\"] || a[\"@id\"]\n      }, ctx);\n    }\n    let resolver = fallbackResolver;\n    if (a._resolver) {\n      resolver = a._resolver;\n      if (typeof resolver === \"string\")\n        resolver = loadResolver(resolver);\n      delete a._resolver;\n    }\n    if (!resolver)\n      return a;\n    let node = resolveNode(a, ctx, resolver);\n    if (options.afterResolve)\n      options.afterResolve(node);\n    if (options.generateId || options.root)\n      node = resolveNodeId(node, ctx, resolver, false);\n    if (options.root) {\n      if (resolver.resolveRootNode)\n        resolver.resolveRootNode(node, ctx);\n      ctx.push(node);\n      return idReference(node[\"@id\"]);\n    }\n    return node;\n  });\n  if (!options.array && ids.length === 1)\n    return ids[0];\n  return ids;\n}\n\nfunction groupBy(array, predicate) {\n  return array.reduce((acc, value, index, array2) => {\n    const key = predicate(value, index, array2);\n    if (!acc[key])\n      acc[key] = [];\n    acc[key].push(value);\n    return acc;\n  }, {});\n}\nfunction uniqueBy(array, predicate) {\n  return Object.values(groupBy(array, predicate)).map((a) => a[a.length - 1]);\n}\nconst merge = createDefu((object, key, value) => {\n  if (Array.isArray(object[key])) {\n    if (Array.isArray(value)) {\n      const map = {};\n      for (const item of [...object[key], ...value])\n        map[hash(item)] = item;\n      object[key] = Object.values(map);\n      if (key === \"itemListElement\") {\n        object[key] = [...uniqueBy(object[key], (item) => item.position)];\n      }\n      return true;\n    }\n    object[key] = merge(object[key], Array.isArray(value) ? value : [value]);\n    return true;\n  }\n});\nfunction dedupeNodes(nodes) {\n  const dedupedNodes = {};\n  for (const key of nodes.keys()) {\n    const n = nodes[key];\n    const nodeKey = resolveAsGraphKey(n[\"@id\"] || hash(n));\n    if (dedupedNodes[nodeKey] && n._dedupeStrategy !== \"replace\")\n      dedupedNodes[nodeKey] = merge(nodes[key], dedupedNodes[nodeKey]);\n    else\n      dedupedNodes[nodeKey] = nodes[key];\n  }\n  return Object.values(dedupedNodes);\n}\nfunction normaliseNodes(nodes) {\n  const sortedNodeKeys = nodes.keys();\n  const dedupedNodes = {};\n  for (const key of sortedNodeKeys) {\n    const n = nodes[key];\n    const nodeKey = resolveAsGraphKey(n[\"@id\"] || hash(n));\n    const groupedKeys = groupBy(Object.keys(n), (key2) => {\n      const val = n[key2];\n      if (key2[0] === \"_\")\n        return \"ignored\";\n      if (Array.isArray(val) || typeof val === \"object\")\n        return \"relations\";\n      return \"primitives\";\n    });\n    const keys = [\n      ...(groupedKeys.primitives || []).sort(),\n      ...(groupedKeys.relations || []).sort()\n    ];\n    let newNode = {};\n    for (const key2 of keys)\n      newNode[key2] = n[key2];\n    if (dedupedNodes[nodeKey])\n      newNode = merge(newNode, dedupedNodes[nodeKey]);\n    dedupedNodes[nodeKey] = newNode;\n  }\n  return Object.values(dedupedNodes);\n}\n\nconst baseRelationNodes = [\n  \"translationOfWork\",\n  \"workTranslation\"\n];\nfunction createSchemaOrgGraph() {\n  const ctx = {\n    find(id) {\n      let resolver = (s) => s;\n      if (id[0] === \"#\") {\n        resolver = resolveAsGraphKey;\n      } else if (id[0] === \"/\") {\n        resolver = (s) => s.replace(/(https?:)?\\/\\//, \"\").split(\"/\")[0];\n      }\n      const key = resolver(id);\n      return ctx.nodes.filter((n) => !!n[\"@id\"]).find((n) => resolver(n[\"@id\"]) === key);\n    },\n    push(input) {\n      asArray(input).forEach((node) => {\n        const registeredNode = node;\n        ctx.nodes.push(registeredNode);\n      });\n    },\n    resolveGraph(meta) {\n      ctx.meta = resolveMeta({ ...meta });\n      ctx.nodes.forEach((node, key) => {\n        const resolver = node._resolver;\n        node = resolveNode(node, ctx, resolver);\n        node = resolveNodeId(node, ctx, resolver, true);\n        ctx.nodes[key] = node;\n      });\n      ctx.nodes = dedupeNodes(ctx.nodes);\n      ctx.nodes.forEach((node) => {\n        if (node.image && typeof node.image === \"string\") {\n          node.image = resolveRelation(node.image, ctx, imageResolver, {\n            root: true\n          });\n        }\n        baseRelationNodes.forEach((k) => {\n          node[k] = resolveRelation(node[k], ctx);\n        });\n        if (node._resolver?.resolveRootNode)\n          node._resolver.resolveRootNode(node, ctx);\n        delete node._resolver;\n      });\n      return normaliseNodes(ctx.nodes);\n    },\n    nodes: [],\n    meta: {}\n  };\n  return ctx;\n}\n\nfunction UnheadSchemaOrg(options) {\n  return SchemaOrgUnheadPlugin({}, () => ({}), options);\n}\nfunction PluginSchemaOrg(options) {\n  const fallback = () => ({});\n  return SchemaOrgUnheadPlugin({}, options?.resolveMeta || fallback, options);\n}\nfunction SchemaOrgUnheadPlugin(config, meta, options) {\n  config = resolveMeta({ ...config });\n  let graph;\n  let resolvedMeta = {};\n  return defineHeadPlugin((head) => ({\n    key: \"schema-org\",\n    hooks: {\n      \"entries:resolve\": () => {\n        graph = createSchemaOrgGraph();\n      },\n      \"tag:normalise\": async ({ tag }) => {\n        if (tag.tag === \"script\" && tag.props.type === \"application/ld+json\" && tag.props.nodes) {\n          const { loadResolver } = await Promise.resolve().then(function () { return resolver; });\n          const nodes = await tag.props.nodes;\n          for (const node of Array.isArray(nodes) ? nodes : [nodes]) {\n            if (typeof node !== \"object\" || Object.keys(node).length === 0) {\n              continue;\n            }\n            const newNode = {\n              ...node,\n              _dedupeStrategy: tag.tagDuplicateStrategy,\n              _resolver: loadResolver(await node._resolver)\n            };\n            graph.push(newNode);\n          }\n          tag.tagPosition = tag.tagPosition || config.tagPosition === \"head\" ? \"head\" : \"bodyClose\";\n        }\n        if (tag.tag === \"htmlAttrs\" && tag.props.lang) {\n          resolvedMeta.inLanguage = tag.props.lang;\n        } else if (tag.tag === \"title\") {\n          resolvedMeta.title = tag.textContent;\n        } else if (tag.tag === \"meta\" && tag.props.name === \"description\") {\n          resolvedMeta.description = tag.props.content;\n        } else if (tag.tag === \"link\" && tag.props.rel === \"canonical\") {\n          resolvedMeta.url = tag.props.href;\n          if (resolvedMeta.url && !resolvedMeta.host) {\n            try {\n              resolvedMeta.host = new URL(resolvedMeta.url).origin;\n            } catch {\n            }\n          }\n        } else if (tag.tag === \"meta\" && tag.props.property === \"og:image\") {\n          resolvedMeta.image = tag.props.content;\n        } else if (tag.tag === \"templateParams\" && tag.props.schemaOrg) {\n          resolvedMeta = {\n            ...resolvedMeta,\n            // @ts-expect-error untyped\n            ...tag.props.schemaOrg\n          };\n          delete tag.props.schemaOrg;\n        }\n      },\n      \"tags:resolve\": async (ctx) => {\n        for (const k in ctx.tags) {\n          const tag = ctx.tags[k];\n          if (tag.tag === \"script\" && tag.props.type === \"application/ld+json\" && tag.props.nodes) {\n            delete tag.props.nodes;\n            const resolvedGraph = graph.resolveGraph({ ...await meta?.() || {}, ...config, ...resolvedMeta });\n            if (!resolvedGraph.length) {\n              tag.props = {};\n              return;\n            }\n            const minify = options?.minify || process.env.NODE_ENV === \"production\";\n            tag.innerHTML = JSON.stringify({\n              \"@context\": \"https://schema.org\",\n              \"@graph\": resolvedGraph\n            }, (_, value) => {\n              if (typeof value !== \"object\")\n                return processTemplateParams(value, head._templateParams, head._separator);\n              return value;\n            }, minify ? 0 : 2);\n            return;\n          }\n        }\n      },\n      \"tags:afterResolve\": (ctx) => {\n        let firstNodeKey;\n        for (const k in ctx.tags) {\n          const tag = ctx.tags[k];\n          if (tag.props.type === \"application/ld+json\" && tag.props.nodes || tag.key === \"schema-org-graph\") {\n            delete tag.props.nodes;\n            if (typeof firstNodeKey === \"undefined\") {\n              firstNodeKey = k;\n              continue;\n            }\n            ctx.tags[firstNodeKey].props = defu(ctx.tags[firstNodeKey].props, tag.props);\n            delete ctx.tags[firstNodeKey].props.nodes;\n            ctx.tags[k] = false;\n          }\n        }\n        ctx.tags = ctx.tags.filter(Boolean);\n      }\n    }\n  }));\n}\n\nexport { webSiteResolver as $, imageResolver as A, itemListResolver as B, jobPostingResolver as C, listItemResolver as D, localBusinessResolver as E, movieResolver as F, offerResolver as G, HowToId as H, openingHoursResolver as I, organizationResolver as J, personResolver as K, addressResolver as L, ProductId as M, productResolver as N, questionResolver as O, PrimaryArticleId as P, ratingResolver as Q, RecipeId as R, recipeResolver as S, reviewResolver as T, UnheadSchemaOrg as U, softwareAppResolver as V, videoResolver as W, PrimaryWebPageId as X, webPageResolver as Y, readActionResolver as Z, PrimaryWebSiteId as _, resolveNode as a, searchActionResolver as a0, PluginSchemaOrg as a1, SchemaOrgUnheadPlugin as a2, resolveNodeId as b, createSchemaOrgGraph as c, defineSchemaOrgResolver as d, resolveRelation as e, dedupeNodes as f, aggregateOfferResolver as g, aggregateRatingResolver as h, articleResolver as i, bookEditionResolver as j, PrimaryBookId as k, bookResolver as l, PrimaryBreadcrumbId as m, normaliseNodes as n, breadcrumbResolver as o, commentResolver as p, courseResolver as q, resolveMeta as r, PrimaryEventId as s, eventResolver as t, placeResolver as u, virtualLocationResolver as v, foodEstablishmentResolver as w, howToResolver as x, howToStepResolver as y, howToStepDirectionResolver as z };\n", "import { U as UnheadSchemaOrg } from './shared/schema-org.CwD-TP0q.mjs';\nexport { H as HowToId, a1 as PluginSchemaOrg, P as PrimaryArticleId, k as PrimaryBookId, m as PrimaryBreadcrumbId, s as PrimaryEventId, X as PrimaryWebPageId, _ as PrimaryWebSiteId, M as ProductId, R as RecipeId, a2 as SchemaOrgUnheadPlugin, L as addressResolver, g as aggregateOfferResolver, h as aggregateRatingResolver, i as articleResolver, j as bookEditionResolver, l as bookResolver, o as breadcrumbResolver, p as commentResolver, q as courseResolver, c as createSchemaOrgGraph, f as dedupeNodes, d as defineSchemaOrgResolver, t as eventResolver, w as foodEstablishmentResolver, x as howToResolver, z as howToStepDirectionResolver, y as howToStepResolver, A as imageResolver, B as itemListResolver, C as jobPostingResolver, D as listItemResolver, E as localBusinessResolver, F as movieResolver, n as normaliseNodes, G as offerResolver, I as openingHoursResolver, J as organizationResolver, K as personResolver, u as placeResolver, N as productResolver, O as questionResolver, Q as ratingResolver, Z as readActionResolver, S as recipeResolver, r as resolveMeta, a as resolveNode, b as resolveNodeId, e as resolveRelation, T as reviewResolver, a0 as searchActionResolver, V as softwareAppResolver, W as videoResolver, v as virtualLocationResolver, Y as webPageResolver, $ as webSiteResolver } from './shared/schema-org.CwD-TP0q.mjs';\nimport { getActiveHead, useHead } from 'unhead';\nimport '@unhead/shared';\nimport 'defu';\nimport 'ufo';\nimport 'ohash';\n\nfunction provideResolver(input, resolver) {\n  if (!input)\n    input = {};\n  input._resolver = resolver;\n  return input;\n}\nfunction defineAddress(input) {\n  return provideResolver(input, \"address\");\n}\nfunction defineAggregateOffer(input) {\n  return provideResolver(input, \"aggregateOffer\");\n}\nfunction defineAggregateRating(input) {\n  return provideResolver(input, \"aggregateRating\");\n}\nfunction defineArticle(input) {\n  return provideResolver(input, \"article\");\n}\nfunction defineBreadcrumb(input) {\n  return provideResolver(input, \"breadcrumb\");\n}\nfunction defineComment(input) {\n  return provideResolver(input, \"comment\");\n}\nfunction defineEvent(input) {\n  return provideResolver(input, \"event\");\n}\nfunction defineFoodEstablishment(input) {\n  return provideResolver(input, \"foodEstablishment\");\n}\nfunction defineVirtualLocation(input) {\n  return provideResolver(input, \"virtualLocation\");\n}\nfunction definePlace(input) {\n  return provideResolver(input, \"place\");\n}\nfunction defineHowTo(input) {\n  return provideResolver(input, \"howTo\");\n}\nfunction defineHowToStep(input) {\n  return provideResolver(input, \"howToStep\");\n}\nfunction defineImage(input) {\n  return provideResolver(input, \"image\");\n}\nfunction defineJobPosting(input) {\n  return provideResolver(input, \"jobPosting\");\n}\nfunction defineLocalBusiness(input) {\n  return provideResolver(input, \"localBusiness\");\n}\nfunction defineOffer(input) {\n  return provideResolver(input, \"offer\");\n}\nfunction defineOpeningHours(input) {\n  return provideResolver(input, \"openingHours\");\n}\nfunction defineOrganization(input) {\n  return provideResolver(input, \"organization\");\n}\nfunction definePerson(input) {\n  return provideResolver(input, \"person\");\n}\nfunction defineProduct(input) {\n  return provideResolver(input, \"product\");\n}\nfunction defineQuestion(input) {\n  return provideResolver(input, \"question\");\n}\nfunction defineRecipe(input) {\n  return provideResolver(input, \"recipe\");\n}\nfunction defineReview(input) {\n  return provideResolver(input, \"review\");\n}\nfunction defineVideo(input) {\n  return provideResolver(input, \"video\");\n}\nfunction defineWebPage(input) {\n  return provideResolver(input, \"webPage\");\n}\nfunction defineWebSite(input) {\n  return provideResolver(input, \"webSite\");\n}\nfunction defineBook(input) {\n  return provideResolver(input, \"book\");\n}\nfunction defineCourse(input) {\n  return provideResolver(input, \"course\");\n}\nfunction defineItemList(input) {\n  return provideResolver(input, \"itemList\");\n}\nfunction defineListItem(input) {\n  return provideResolver(input, \"listItem\");\n}\nfunction defineMovie(input) {\n  return provideResolver(input, \"movie\");\n}\nfunction defineSearchAction(input) {\n  return provideResolver(input, \"searchAction\");\n}\nfunction defineReadAction(input) {\n  return provideResolver(input, \"readAction\");\n}\nfunction defineSoftwareApp(input) {\n  return provideResolver(input, \"softwareApp\");\n}\nfunction defineBookEdition(input) {\n  return provideResolver(input, \"bookEdition\");\n}\nfunction useSchemaOrg(input, options) {\n  const head = getActiveHead();\n  if (!head)\n    return;\n  if (Array.isArray(input) && input.length === 0 || !input) {\n    return;\n  }\n  head.use(UnheadSchemaOrg());\n  return useHead({\n    script: [\n      {\n        type: \"application/ld+json\",\n        key: \"schema-org-graph\",\n        nodes: input\n      }\n    ]\n  }, options);\n}\n\nexport { UnheadSchemaOrg, defineAddress, defineAggregateOffer, defineAggregateRating, defineArticle, defineBook, defineBookEdition, defineBreadcrumb, defineComment, defineCourse, defineEvent, defineFoodEstablishment, defineHowTo, defineHowToStep, defineImage, defineItemList, defineJobPosting, defineListItem, defineLocalBusiness, defineMovie, defineOffer, defineOpeningHours, defineOrganization, definePerson, definePlace, defineProduct, defineQuestion, defineReadAction, defineRecipe, defineReview, defineSearchAction, defineSoftwareApp, defineVideo, defineVirtualLocation, defineWebPage, defineWebSite, useSchemaOrg };\n"],
  "mappings": "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",
  "names": ["r", "defaults", "resolver", "loadResolver", "resolver"]
}
